CLIB_FOPEN_MAX                  = $FFFFFFFF ; L zcc1D8318
REGISTER_SP                     = $FFFFFFFF ; L zcc1D8318
TAR__clib_malloc_heap_size      = $FFFFFFFF ; L zcc1D8318
__MMAP                          = $FFFFFFFF ; L zcc1D8318
__clib_fopen_max                = $FFFFFFFF ; L zcc1D8318
__register_sp                   = $FFFFFFFF ; L zcc1D8318
CLIB_MALLOC_HEAP_SIZE           = $0000 ; L zcc1D8318
CLIB_OPT_STDIO                  = $0000 ; L zcc1D8318
CLIB_STDIO_HEAP_SIZE            = $0000 ; L zcc1D8318
CRT_ENABLE_CLOSE                = $0000 ; L zcc1D8318
CRT_ENABLE_EIDI                 = $0000 ; L zcc1D8318
CRT_ON_EXIT                     = $0000 ; L zcc1D8318
IOCTL_RESET                     = $0000 ; G zcc1D8318
STDIO_SEEK_SET                  = $0000 ; G zcc1D8318
TAR__clib_balloc_table_size     = $0000 ; L zcc1D8318
TAR__clib_exit_stack_size       = $0000 ; L zcc1D8318
TAR__clib_fopen_max             = $0000 ; L zcc1D8318
TAR__clib_open_max              = $0000 ; L zcc1D8318
TAR__clib_quickexit_stack_size  = $0000 ; L zcc1D8318
TAR__crt_enable_commandline     = $0000 ; L zcc1D8318
TAR__crt_enable_nmi             = $0000 ; L zcc1D8318
TAR__crt_enable_restart         = $0000 ; L zcc1D8318
TAR__crt_enable_rst             = $0000 ; L zcc1D8318
TAR__crt_include_preamble       = $0000 ; L zcc1D8318
TAR__crt_initialize_bss         = $0000 ; L zcc1D8318
TAR__crt_model                  = $0000 ; L zcc1D8318
TAR__crt_org_bss                = $0000 ; L zcc1D8318
TAR__crt_org_data               = $0000 ; L zcc1D8318
__BSS_END_size                  = $0000 ; G 
__BSS_UNINITIALIZED_size        = $0000 ; G 
__BSS_size                      = $0000 ; G 
__CLIB_OPT_ERROR                = $0000 ; L error_edom_mc
__CLIB_OPT_ERROR                = $0000 ; L error_einval_zc
__CLIB_OPT_ERROR                = $0000 ; L error_erange_zc
__CLIB_OPT_FASTCOPY             = $0000 ; L asm_memset
__CLIB_OPT_FASTCOPY             = $0000 ; L asm_zx_cls
__CLIB_OPT_IMATH                = $0000 ; L l_divs_16_16x16
__CLIB_OPT_IMATH                = $0000 ; L l_divu_16_16x8
__CLIB_OPT_IMATH                = $0000 ; L l_mulu_16_16x16
__CODE_END_size                 = $0000 ; G 
__CRTDEF                        = $0000 ; L zcc1D8318
__DATA_END_size                 = $0000 ; G 
__DATA_size                     = $0000 ; G 
__EOK                           = $0000 ; G zcc1D8318
__IGNORE_size                   = $0000 ; G 
__bss_alloc_balloc_size         = $0000 ; G 
__bss_alloc_malloc_size         = $0000 ; G 
__bss_arch_size                 = $0000 ; G 
__bss_clib_size                 = $0000 ; G 
__bss_compress_aplib_size       = $0000 ; G 
__bss_driver_size               = $0000 ; G 
__bss_fcntl_size                = $0000 ; G 
__bss_font_size                 = $0000 ; G 
__bss_input_size                = $0000 ; G 
__bss_lib_size                  = $0000 ; G 
__bss_sound_bit_size            = $0000 ; G 
__bss_stdio_size                = $0000 ; G 
__bss_string_size               = $0000 ; G 
__clib_balloc_table_size        = $0000 ; L zcc1D8318
__clib_exit_stack_size          = $0000 ; L zcc1D8318
__clib_malloc_heap_size         = $0000 ; L zcc1D8318
__clib_open_max                 = $0000 ; L zcc1D8318
__clib_quickexit_stack_size     = $0000 ; L zcc1D8318
__clib_stdio_heap_size          = $0000 ; L zcc1D8318
__code_adt_b_array_size         = $0000 ; G 
__code_adt_b_vector_size        = $0000 ; G 
__code_adt_ba_priority_queue_size = $0000 ; G 
__code_adt_ba_stack_size        = $0000 ; G 
__code_adt_bv_priority_queue_size = $0000 ; G 
__code_adt_bv_stack_size        = $0000 ; G 
__code_adt_p_forward_list_alt_size = $0000 ; G 
__code_adt_p_forward_list_size  = $0000 ; G 
__code_adt_p_list_size          = $0000 ; G 
__code_adt_p_queue_size         = $0000 ; G 
__code_adt_p_stack_size         = $0000 ; G 
__code_adt_w_array_size         = $0000 ; G 
__code_adt_w_vector_size        = $0000 ; G 
__code_adt_wa_priority_queue_size = $0000 ; G 
__code_adt_wa_stack_size        = $0000 ; G 
__code_adt_wv_priority_queue_size = $0000 ; G 
__code_adt_wv_stack_size        = $0000 ; G 
__code_alloc_balloc_size        = $0000 ; G 
__code_alloc_malloc_size        = $0000 ; G 
__code_alloc_obstack_size       = $0000 ; G 
__code_bifrost2_size            = $0000 ; G 
__code_bifrost_h_size           = $0000 ; G 
__code_bifrost_l_size           = $0000 ; G 
__code_clib_size                = $0000 ; G 
__code_compress_aplib_size      = $0000 ; G 
__code_compress_zx7_size        = $0000 ; G 
__code_crt_exit_size            = $0000 ; G 
__code_crt_init_size            = $0000 ; G 
__code_ctype_size               = $0000 ; G 
__code_driver_character_input_size = $0000 ; G 
__code_driver_character_output_size = $0000 ; G 
__code_driver_general_size      = $0000 ; G 
__code_driver_memstream_size    = $0000 ; G 
__code_driver_size              = $0000 ; G 
__code_driver_terminal_input_size = $0000 ; G 
__code_driver_terminal_output_size = $0000 ; G 
__code_driver_tty_size          = $0000 ; G 
__code_fcntl_size               = $0000 ; G 
__code_font_fzx_size            = $0000 ; G 
__code_font_size                = $0000 ; G 
__code_fp_genmath_size          = $0000 ; G 
__code_fp_math48_size           = $0000 ; G 
__code_inttypes_size            = $0000 ; G 
__code_l_sccz80_size            = $0000 ; G 
__code_lib_size                 = $0000 ; G 
__code_locale_size              = $0000 ; G 
__code_network_size             = $0000 ; G 
__code_nirvanam_size            = $0000 ; G 
__code_setjmp_size              = $0000 ; G 
__code_stdio_size               = $0000 ; G 
__code_temp_sp1_size            = $0000 ; G 
__code_threads_mutex_size       = $0000 ; G 
__code_threads_size             = $0000 ; G 
__crt_enable_close              = $0000 ; L zcc1D8318
__crt_enable_commandline        = $0000 ; L zcc1D8318
__crt_enable_eidi               = $0000 ; L zcc1D8318
__crt_enable_restart            = $0000 ; L zcc1D8318
__crt_include_preamble          = $0000 ; L zcc1D8318
__crt_initialize_bss            = $0000 ; L zcc1D8318
__crt_model                     = $0000 ; L zcc1D8318
__crt_on_exit                   = $0000 ; L zcc1D8318
__data_alloc_balloc_size        = $0000 ; G 
__data_alloc_malloc_size        = $0000 ; G 
__data_clib_size                = $0000 ; G 
__data_driver_size              = $0000 ; G 
__data_fcntl_fdtable_body_size  = $0000 ; G 
__data_fcntl_size               = $0000 ; G 
__data_fcntl_stdio_heap_body_size = $0000 ; G 
__data_fcntl_stdio_heap_head_size = $0000 ; G 
__data_fcntl_stdio_heap_tail_size = $0000 ; G 
__data_font_size                = $0000 ; G 
__data_lib_size                 = $0000 ; G 
__data_stdio_size               = $0000 ; G 
__data_user_size                = $0000 ; G 
__exit_stack_size               = $0000 ; G zcc1D8318
__fcntl_fdtbl                   = $0000 ; G zcc1D8318
__fcntl_fdtbl_size              = $0000 ; G zcc1D8318
__head                          = $0000 ; G 
__quickexit_stack_size          = $0000 ; G zcc1D8318
__rodata_clib_size              = $0000 ; G 
__rodata_driver_size            = $0000 ; G 
__rodata_error_strings_size     = $0000 ; G 
__rodata_fcntl_size             = $0000 ; G 
__rodata_font_4x8_size          = $0000 ; G 
__rodata_font_8x8_size          = $0000 ; G 
__rodata_font_fzx_size          = $0000 ; G 
__rodata_font_size              = $0000 ; G 
__rodata_lib_size               = $0000 ; G 
__rodata_sound_bit_size         = $0000 ; G 
__rodata_stdio_size             = $0000 ; G 
__rodata_stdlib_size            = $0000 ; G 
__smc_clib_size                 = $0000 ; G 
__smc_compiler_size             = $0000 ; G 
__smc_driver_size               = $0000 ; G 
__smc_fcntl_size                = $0000 ; G 
__smc_font_size                 = $0000 ; G 
__smc_l_size                    = $0000 ; G 
__smc_lib_size                  = $0000 ; G 
__smc_sound_bit_size            = $0000 ; G 
__smc_user_size                 = $0000 ; G 
thrd_success                    = $0000 ; G zcc1D8318
DEFINED_CLIB_FOPEN_MAX          = $0001 ; L zcc1D8318
DEFINED_CLIB_MALLOC_HEAP_SIZE   = $0001 ; L zcc1D8318
DEFINED_CLIB_OPT_STDIO          = $0001 ; L zcc1D8318
DEFINED_CLIB_STDIO_HEAP_SIZE    = $0001 ; L zcc1D8318
DEFINED_CRT_ENABLE_CLOSE        = $0001 ; L zcc1D8318
DEFINED_CRT_ENABLE_EIDI         = $0001 ; L zcc1D8318
DEFINED_CRT_ON_EXIT             = $0001 ; L zcc1D8318
DEFINED_CRT_ORG_CODE            = $0001 ; L zcc1D8318
DEFINED_REGISTER_SP             = $0001 ; L zcc1D8318
DEFINED_Z88DK_USES_SDCC         = $0001 ; L zcc1D8318
DEFINED___MMAP                  = $0001 ; L zcc1D8318
DEFINED_startup                 = $0001 ; L zcc1D8318
STDIO_MSG_PUTC                  = $0001 ; G zcc1D8318
STDIO_SEEK_CUR                  = $0001 ; G zcc1D8318
TAR__crt_enable_close           = $0001 ; L zcc1D8318
TAR__crt_enable_eidi            = $0001 ; L zcc1D8318
Z88DK_USES_SDCC                 = $0001 ; L zcc1D8318
_CLIB_CFG_ASM_                  = $0001 ; L asm_memset
_CLIB_CFG_ASM_                  = $0001 ; L asm_zx_cls
_CLIB_CFG_ASM_                  = $0001 ; L error_edom_mc
_CLIB_CFG_ASM_                  = $0001 ; L error_einval_zc
_CLIB_CFG_ASM_                  = $0001 ; L error_erange_zc
_CLIB_CFG_ASM_                  = $0001 ; L l_divs_16_16x16
_CLIB_CFG_ASM_                  = $0001 ; L l_divu_16_16x8
_CLIB_CFG_ASM_                  = $0001 ; L l_mulu_16_16x16
_CLIB_TARGET_CFG_ASM_           = $0001 ; L asm_bit_beep_raw
_CLIB_TARGET_CFG_ASM_           = $0001 ; L asm_bit_close
_CLIB_TARGET_CFG_ASM_           = $0001 ; L asm_bit_open
_CLIB_TARGET_CFG_ASM_           = $0001 ; L asm_z80_delay_ms
__CODE_size                     = $0001 ; G 
__EACCES                        = $0001 ; G zcc1D8318
__NIRVANA_HOLE_size             = $0001 ; G 
__SDCC                          = $0001 ; L asm_memset
__SDCC                          = $0001 ; L asm_zx_cls
__SDCC                          = $0001 ; L error_edom_mc
__SDCC                          = $0001 ; L error_einval_zc
__SDCC                          = $0001 ; L error_erange_zc
__SDCC                          = $0001 ; L l_compare_de_hl
__SDCC                          = $0001 ; L l_divs_16_16x16
__SDCC                          = $0001 ; L l_divu_16_16x8
__SDCC                          = $0001 ; L l_mulu_16_16x16
__SDCC                          = $0001 ; L zcc1D8314
__SDCC                          = $0001 ; L zcc1D8317
__SDCC                          = $0001 ; L zcc1D8318
__SDCC_IY                       = $0001 ; L asm_memset
__SDCC_IY                       = $0001 ; L asm_zx_cls
__SDCC_IY                       = $0001 ; L error_edom_mc
__SDCC_IY                       = $0001 ; L error_einval_zc
__SDCC_IY                       = $0001 ; L error_erange_zc
__SDCC_IY                       = $0001 ; L l_compare_de_hl
__SDCC_IY                       = $0001 ; L l_divs_16_16x16
__SDCC_IY                       = $0001 ; L l_divu_16_16x8
__SDCC_IY                       = $0001 ; L l_mulu_16_16x16
__SDCC_IY                       = $0001 ; L zcc1D8318
__data_sound_bit_size           = $0001 ; G 
__data_threads_size             = $0001 ; G 
__rodata_error_string_end_size  = $0001 ; G 
__sound_bit_method              = $0001 ; L asm_bit_beep_raw
mtx_plain                       = $0001 ; G zcc1D8318
thrd_error                      = $0001 ; G zcc1D8318
STDIO_MSG_WRIT                  = $0002 ; G zcc1D8318
STDIO_SEEK_END                  = $0002 ; G zcc1D8318
__EBADF                         = $0002 ; G zcc1D8318
__bss_error_size                = $0002 ; G 
__bss_stdlib_size               = $0002 ; G 
__code_crt_return_size          = $0002 ; G 
mtx_recursive                   = $0002 ; G zcc1D8318
thrd_nomem                      = $0002 ; G zcc1D8318
STDIO_MSG_GETC                  = $0003 ; G zcc1D8318
__EBDFD                         = $0003 ; G zcc1D8318
__LOADER_size                   = $0003 ; G 
STDIO_MSG_EATC                  = $0004 ; G zcc1D8318
__EDOM                          = $0004 ; G zcc1D8318
__code_crt_main_size            = $0004 ; G 
__data_stdlib_size              = $0004 ; G 
__sound_bit_toggle_pos          = $0004 ; L asm_bit_beep_raw
mtx_timed                       = $0004 ; G zcc1D8318
thrd_busy                       = $0004 ; G zcc1D8318
STDIO_MSG_READ                  = $0005 ; G zcc1D8318
__EFBIG                         = $0005 ; G zcc1D8318
STDIO_MSG_SEEK                  = $0006 ; G zcc1D8318
__EINVAL                        = $0006 ; G zcc1D8318
__bss_user_size                 = $0006 ; G 
STDIO_MSG_ICTL                  = $0007 ; G zcc1D8318
TAR__crt_enable_streams         = $0007 ; L zcc1D8318
__EMFILE                        = $0007 ; G zcc1D8318
STDIO_MSG_FLSH                  = $0008 ; G zcc1D8318
__ENFILE                        = $0008 ; G zcc1D8318
thrd_timedout                   = $0008 ; G zcc1D8318
STDIO_MSG_CLOS                  = $0009 ; G zcc1D8318
__ENOLCK                        = $0009 ; G zcc1D8318
__ENOMEM                        = $000A ; G zcc1D8318
__ENOTSUP                       = $000B ; G zcc1D8318
__EOVERFLOW                     = $000C ; G zcc1D8318
__ERANGE                        = $000D ; G zcc1D8318
__ESTAT                         = $000E ; G zcc1D8318
ICHAR_MSG_GETC                  = $000F ; G zcc1D8318
ITERM_MSG_GETC                  = $000F ; G zcc1D8318
__EAGAIN                        = $000F ; G zcc1D8318
__EWOULDBLOCK                   = $000F ; G zcc1D8318
ITERM_MSG_INTERRUPT             = $0010 ; G zcc1D8318
__sound_bit_toggle              = $0010 ; L asm_bit_beep_raw
ITERM_MSG_PUTC                  = $0011 ; G zcc1D8318
ITERM_MSG_PRINT_CURSOR          = $0012 ; G zcc1D8318
ITERM_MSG_ERASE_CURSOR          = $0013 ; G zcc1D8318
ITERM_MSG_ERASE_CURSOR_PWD      = $0014 ; G zcc1D8318
ITERM_MSG_BS                    = $0015 ; G zcc1D8318
ITERM_MSG_BS_PWD                = $0016 ; G zcc1D8318
ITERM_MSG_READLINE_BEGIN        = $0017 ; G zcc1D8318
__sound_bit_read_mask           = $0017 ; L asm_bit_open
ITERM_MSG_READLINE_END          = $0018 ; G zcc1D8318
ITERM_MSG_BELL                  = $0019 ; G zcc1D8318
OCHAR_MSG_PUTC_BIN              = $001E ; G zcc1D8318
OTERM_MSG_PUTC                  = $001E ; G zcc1D8318
OTERM_MSG_TTY                   = $001F ; G zcc1D8318
startup                         = $001F ; L zcc1D8318
OCHAR_MSG_PUTC                  = $0020 ; G zcc1D8318
OTERM_MSG_PRINTC                = $0020 ; G zcc1D8318
__MCLOAD_size                   = $0020 ; G 
__code_string_size              = $0020 ; G 
OTERM_MSG_SCROLL                = $0021 ; G zcc1D8318
OTERM_MSG_CLS                   = $0022 ; G zcc1D8318
OTERM_MSG_PAUSE                 = $0023 ; G zcc1D8318
OTERM_MSG_BELL                  = $0024 ; G zcc1D8318
OTERM_MSG_PSCROLL               = $0025 ; G zcc1D8318
__code_error_size               = $0034 ; G 
__code_l_sdcc_size              = $0034 ; G 
__code_z80_size                 = $0037 ; G 
__code_arch_size                = $003D ; G 
__code_crt_common_size          = $0047 ; G 
__code_sound_bit_size           = $0051 ; G 
__code_nirvanap_size            = $0056 ; G 
__code_l_size                   = $0062 ; G 
__LOADER_CODE_size              = $0071 ; G 
__code_math_size                = $0087 ; G 
__rodata_input_size             = $00A0 ; G 
__code_stdlib_size              = $00AE ; G 
__sound_bit_write_mask          = $00E8 ; L asm_bit_close
__sound_bit_port                = $00FE ; L asm_bit_beep_raw
TAR__clib_stdio_heap_size       = $0100 ; L zcc1D8318
IOCTL_OTERM_CLS                 = $0102 ; G zcc1D8318
__bss_compiler_size             = $010C ; G 
__code_input_size               = $015D ; G 
TAR__crt_stack_size             = $0200 ; L zcc1D8318
IOCTL_ITERM_TIE                 = $0201 ; G zcc1D8318
IOCTL_OTERM_RESET_SCROLL        = $0202 ; G zcc1D8318
__code_user_size                = $0237 ; G 
__rodata_compiler_size          = $028F ; G 
__FONT_size                     = $0300 ; G 
IOCTL_ITERM_SET_EDITBUF         = $0301 ; G zcc1D8318
IOCTL_OTERM_SET_WINDOW_COORD    = $0302 ; G zcc1D8318
IOCTL_ITERM_GET_EDITBUF         = $0381 ; G zcc1D8318
IOCTL_OTERM_GET_WINDOW_COORD    = $0382 ; G zcc1D8318
__data_compiler_size            = $03AD ; G 
IOCTL_OTERM_SET_WINDOW_RECT     = $0402 ; G zcc1D8318
IOCTL_OTERM_GET_WINDOW_RECT     = $0482 ; G zcc1D8318
IOCTL_OTERM_SET_CURSOR_COORD    = $0502 ; G zcc1D8318
IOCTL_OTERM_GET_CURSOR_COORD    = $0582 ; G zcc1D8318
IOCTL_OTERM_GET_OTERM           = $0602 ; G zcc1D8318
IOCTL_OTERM_SCROLL              = $0702 ; G zcc1D8318
IOCTL_OTERM_FONT                = $0802 ; G zcc1D8318
IOCTL_OTERM_FZX_SET_PAPER_COORD = $0A02 ; G zcc1D8318
IOCTL_OTERM_FZX_GET_PAPER_COORD = $0A82 ; G zcc1D8318
IOCTL_OTERM_FZX_SET_PAPER_RECT  = $0B02 ; G zcc1D8318
IOCTL_OTERM_FZX_GET_PAPER_RECT  = $0B82 ; G zcc1D8318
IOCTL_OTERM_FZX_LEFT_MARGIN     = $0C02 ; G zcc1D8318
IOCTL_OTERM_FZX_LINE_SPACING    = $0D02 ; G zcc1D8318
IOCTL_OTERM_FZX_SPACE_EXPAND    = $0E02 ; G zcc1D8318
IOCTL_OTERM_FZX_SET_FZX_STATE   = $0F02 ; G zcc1D8318
IOCTL_OTERM_FZX_GET_FZX_STATE   = $0F82 ; G zcc1D8318
IOCTL_ITERM_SET_DELAY           = $1001 ; G zcc1D8318
IOCTL_OTERM_FCOLOR              = $1002 ; G zcc1D8318
IOCTL_ITERM_GET_DELAY           = $1081 ; G zcc1D8318
IOCTL_ITERM_LASTK               = $1101 ; G zcc1D8318
IOCTL_OTERM_FMASK               = $1102 ; G zcc1D8318
IOCTL_OTERM_BCOLOR              = $1202 ; G zcc1D8318
__BANK_06_size                  = $1923 ; G 
__rodata_user_size              = $2880 ; G 
__MCLOAD_head                   = $4000 ; G 
mini_loader                     = $4000 ; G zcc1D8315
__MCLOAD_tail                   = $4020 ; G 
__code_compiler_size            = $4B40 ; G 
__LOADER_head                   = $5B00 ; G 
__LOADER_CODE_head              = $5B03 ; G 
__LOADER_tail                   = $5B03 ; G 
__code_compress_zx7_head        = $5B03 ; G 
__code_compress_zx7_tail        = $5B03 ; G 
pietro_loader                   = $5B03 ; G zcc1D8315
__LOADER_CODE_tail              = $5B74 ; G 
CRT_ORG_CODE                    = $5C00 ; L zcc1D8318
__CODE_head                     = $5C00 ; G 
__Restart                       = $5C00 ; L zcc1D8318
__Restart_2                     = $5C00 ; L zcc1D8318
__Start                         = $5C00 ; G zcc1D8318
__crt_org_code                  = $5C00 ; L zcc1D8318
__CODE_tail                     = $5C01 ; G 
__code_crt_init_head            = $5C01 ; G 
__code_crt_init_tail            = $5C01 ; G 
__code_crt_main_head            = $5C01 ; G 
__Exit                          = $5C04 ; G zcc1D8318
__code_crt_exit_head            = $5C05 ; G 
__code_crt_exit_tail            = $5C05 ; G 
__code_crt_main_tail            = $5C05 ; G 
__code_crt_return_head          = $5C05 ; G 
__code_crt_common_head          = $5C07 ; G 
__code_crt_return_tail          = $5C07 ; G 
_zx_isr                         = $5C07 ; G zcc1D8317
_zx_enable_bank_00              = $5C42 ; G zcc1D8317
_zx_enable_bank_06              = $5C46 ; G zcc1D8317
__FONT_head                     = $5C4E ; G 
__code_crt_common_tail          = $5C4E ; G 
_pietro_font                    = $5C4E ; G zcc1D8310
__FONT_tail                     = $5F4E ; G 
__code_adt_b_array_head         = $5F4E ; G 
__code_adt_b_array_tail         = $5F4E ; G 
__code_adt_b_vector_head        = $5F4E ; G 
__code_adt_b_vector_tail        = $5F4E ; G 
__code_adt_ba_priority_queue_head = $5F4E ; G 
__code_adt_ba_priority_queue_tail = $5F4E ; G 
__code_adt_ba_stack_head        = $5F4E ; G 
__code_adt_ba_stack_tail        = $5F4E ; G 
__code_adt_bv_priority_queue_head = $5F4E ; G 
__code_adt_bv_priority_queue_tail = $5F4E ; G 
__code_adt_bv_stack_head        = $5F4E ; G 
__code_adt_bv_stack_tail        = $5F4E ; G 
__code_adt_p_forward_list_alt_head = $5F4E ; G 
__code_adt_p_forward_list_alt_tail = $5F4E ; G 
__code_adt_p_forward_list_head  = $5F4E ; G 
__code_adt_p_forward_list_tail  = $5F4E ; G 
__code_adt_p_list_head          = $5F4E ; G 
__code_adt_p_list_tail          = $5F4E ; G 
__code_adt_p_queue_head         = $5F4E ; G 
__code_adt_p_queue_tail         = $5F4E ; G 
__code_adt_p_stack_head         = $5F4E ; G 
__code_adt_p_stack_tail         = $5F4E ; G 
__code_adt_w_array_head         = $5F4E ; G 
__code_adt_w_array_tail         = $5F4E ; G 
__code_adt_w_vector_head        = $5F4E ; G 
__code_adt_w_vector_tail        = $5F4E ; G 
__code_adt_wa_priority_queue_head = $5F4E ; G 
__code_adt_wa_priority_queue_tail = $5F4E ; G 
__code_adt_wa_stack_head        = $5F4E ; G 
__code_adt_wa_stack_tail        = $5F4E ; G 
__code_adt_wv_priority_queue_head = $5F4E ; G 
__code_adt_wv_priority_queue_tail = $5F4E ; G 
__code_adt_wv_stack_head        = $5F4E ; G 
__code_adt_wv_stack_tail        = $5F4E ; G 
__code_alloc_balloc_head        = $5F4E ; G 
__code_alloc_balloc_tail        = $5F4E ; G 
__code_alloc_malloc_head        = $5F4E ; G 
__code_alloc_malloc_tail        = $5F4E ; G 
__code_alloc_obstack_head       = $5F4E ; G 
__code_alloc_obstack_tail       = $5F4E ; G 
__code_arch_head                = $5F4E ; G 
__code_clib_head                = $5F4E ; G 
__code_clib_tail                = $5F4E ; G 
__code_driver_head              = $5F4E ; G 
__code_driver_tail              = $5F4E ; G 
__code_font_head                = $5F4E ; G 
__code_font_tail                = $5F4E ; G 
asm_zx_cyx2saddr                = $5F4E ; G asm_zx_cyx2saddr
asm_zx_saddr2aaddr              = $5F5D ; G asm_zx_saddr2aaddr
_zx_border_fastcall             = $5F67 ; G zx_border_fastcall
asm_zx_border                   = $5F67 ; G asm_zx_border
_zx_cls_fastcall                = $5F77 ; G zx_cls_fastcall
asm_zx_cls                      = $5F77 ; G asm_zx_cls
__code_arch_tail                = $5F8B ; G 
__code_bifrost2_head            = $5F8B ; G 
__code_bifrost2_tail            = $5F8B ; G 
__code_bifrost_h_head           = $5F8B ; G 
__code_bifrost_h_tail           = $5F8B ; G 
__code_bifrost_l_head           = $5F8B ; G 
__code_bifrost_l_tail           = $5F8B ; G 
__code_compress_aplib_head      = $5F8B ; G 
__code_compress_aplib_tail      = $5F8B ; G 
__code_ctype_head               = $5F8B ; G 
__code_ctype_tail               = $5F8B ; G 
__code_driver_character_input_head = $5F8B ; G 
__code_driver_character_input_tail = $5F8B ; G 
__code_driver_character_output_head = $5F8B ; G 
__code_driver_character_output_tail = $5F8B ; G 
__code_driver_general_head      = $5F8B ; G 
__code_driver_general_tail      = $5F8B ; G 
__code_driver_memstream_head    = $5F8B ; G 
__code_driver_memstream_tail    = $5F8B ; G 
__code_driver_terminal_input_head = $5F8B ; G 
__code_driver_terminal_input_tail = $5F8B ; G 
__code_driver_terminal_output_head = $5F8B ; G 
__code_driver_terminal_output_tail = $5F8B ; G 
__code_driver_tty_head          = $5F8B ; G 
__code_driver_tty_tail          = $5F8B ; G 
__code_error_head               = $5F8B ; G 
__ch_system                     = $5F8F ; G zcc1D8318
error_zc                        = $5F8F ; G error_zc
error_znc                       = $5F97 ; G error_znc
error_einval_zc                 = $5FA0 ; G error_einval_zc
error_erange_zc                 = $5FA0 ; G error_erange_zc
errno_zc                        = $5FA2 ; G errno_zc
error_divide_by_zero_mc         = $5FAD ; G error_divide_by_zero_mc
error_edom_mc                   = $5FAD ; G error_edom_mc
errno_mc                        = $5FAF ; G errno_mc
error_mc                        = $5FBA ; G error_mc
__code_error_tail               = $5FBF ; G 
__code_fcntl_head               = $5FBF ; G 
__code_fcntl_tail               = $5FBF ; G 
__code_font_fzx_head            = $5FBF ; G 
__code_font_fzx_tail            = $5FBF ; G 
__code_fp_genmath_head          = $5FBF ; G 
__code_fp_genmath_tail          = $5FBF ; G 
__code_fp_math48_head           = $5FBF ; G 
__code_fp_math48_tail           = $5FBF ; G 
__code_input_head               = $5FBF ; G 
_in_stick_keyboard              = $5FBF ; G in_stick_keyboard
_in_test_key                    = $5FC6 ; G in_test_key
_in_key_scancode_fastcall       = $5FD0 ; G in_key_scancode_fastcall
asm_in_key_scancode             = $5FD0 ; G asm_in_key_scancode
symbol_shift                    = $5FE0 ; L asm_in_key_scancode
cap_shift                       = $5FE8 ; L asm_in_key_scancode
divide_5                        = $5FF0 ; L asm_in_key_scancode
key_bit                         = $5FF0 ; L asm_in_key_scancode
row_loop                        = $5FF9 ; L asm_in_key_scancode
mask_loop                       = $6000 ; L asm_in_key_scancode
_in_stick_cursor                = $6006 ; G in_stick_cursor
asm_in_stick_cursor             = $6006 ; G asm_in_stick_cursor
table                           = $6021 ; L asm_in_stick_cursor
_in_stick_fuller                = $6041 ; G in_stick_fuller
asm_in_stick_fuller             = $6041 ; G asm_in_stick_fuller
_in_stick_kempston              = $604A ; G in_stick_kempston
asm_in_stick_kempston           = $604A ; G asm_in_stick_kempston
table                           = $6058 ; L asm_in_stick_kempston
asm_in_stick_keyboard           = $6078 ; G asm_in_stick_keyboard
fire                            = $607B ; L asm_in_stick_keyboard
right                           = $6085 ; L asm_in_stick_keyboard
left                            = $608F ; L asm_in_stick_keyboard
down                            = $6099 ; L asm_in_stick_keyboard
up                              = $60A3 ; L asm_in_stick_keyboard
exit                            = $60AC ; L asm_in_stick_keyboard
_in_stick_sinclair1             = $60AE ; G in_stick_sinclair1
asm_in_stick_sinclair1          = $60AE ; G asm_in_stick_sinclair1
table                           = $60BE ; L asm_in_stick_sinclair1
_in_stick_sinclair2             = $60DE ; G in_stick_sinclair2
asm_in_stick_sinclair2          = $60DE ; G asm_in_stick_sinclair2
table                           = $60EE ; L asm_in_stick_sinclair2
asm_in_test_key                 = $610E ; G asm_in_test_key
_in_wait_nokey                  = $6116 ; G in_wait_nokey
asm_in_wait_nokey               = $6116 ; G asm_in_wait_nokey
__code_input_tail               = $611C ; G 
__code_inttypes_head            = $611C ; G 
__code_inttypes_tail            = $611C ; G 
__code_l_head                   = $611C ; G 
__thread_block_timeout          = $611D ; G zcc1D8318
__thread_context_switch         = $611D ; G zcc1D8318
__thread_unblock                = $611D ; G zcc1D8318
l_ret                           = $611D ; G l_ret
l_small_utoa                    = $611E ; G l_small_utoa
l_utoa_lib                      = $6131 ; G l_small_utoa
no_leading_zeroes               = $6133 ; L l_small_utoa
leading_zeroes                  = $613F ; L l_small_utoa
write                           = $6142 ; L l_small_utoa
write1s                         = $6147 ; L l_small_utoa
divide                          = $614D ; L l_small_utoa
divloop                         = $614F ; L l_small_utoa
___sdcc_call_hl                 = $6156 ; G ___sdcc_call_hl
l_jphl                          = $6156 ; G l_jphl
l_neg_de                        = $6157 ; G l_neg_de
l_neg_hl                        = $615F ; G l_neg_hl
l_compare_de_hl                 = $6167 ; G l_compare_de_hl
l_jpix                          = $617C ; G l_jpix
____sdcc_2_copy_src_mhl_dst_deix = $617E ; G ____sdcc_2_copy_src_mhl_dst_deix
__code_l_sccz80_head            = $617E ; G 
__code_l_sccz80_tail            = $617E ; G 
__code_l_sdcc_head              = $617E ; G 
__code_l_tail                   = $617E ; G 
___sdcc_enter_ix                = $618A ; G ___sdcc_enter_ix
__divuchar_callee               = $6195 ; G __divuchar_callee
__modsint_callee                = $619E ; G __modsint_callee
__moduchar_callee               = $61A7 ; G __moduchar_callee
__code_l_sdcc_tail              = $61B2 ; G 
__code_locale_head              = $61B2 ; G 
__code_locale_tail              = $61B2 ; G 
__code_math_head                = $61B2 ; G 
l_divs_16_16x16                 = $61B3 ; G l_divs_16_16x16
l_small_divs_16_16x16           = $61B3 ; G l_small_divs_16_16x16
l0_divs_16_16x16                = $61B7 ; G l_divs_16_16x16
l0_small_divs_16_16x16          = $61B7 ; G l_small_divs_16_16x16
divide_by_zero                  = $61D3 ; L l_small_divs_16_16x16
l_small_divu_16_16x16           = $61DF ; G l_small_divu_16_16x16
l0_small_divu_16_16x16          = $61E3 ; G l_small_divu_16_16x16
divisor_sixteen_bit             = $61E7 ; L l_small_divu_16_16x16
loop_16_0                       = $61ED ; L l_small_divu_16_16x16
loop_16_1                       = $61F5 ; L l_small_divu_16_16x16
l_divu_16_16x8                  = $61FF ; G l_divu_16_16x8
l_small_divu_16_16x8            = $61FF ; G l_small_divu_16_16x16
l0_divu_16_16x8                 = $6203 ; G l_divu_16_16x8
l0_small_divu_16_16x8           = $6203 ; G l_small_divu_16_16x16
loop_8_0                        = $6207 ; L l_small_divu_16_16x16
loop_8_2                        = $620E ; L l_small_divu_16_16x16
loop_8_1                        = $6210 ; L l_small_divu_16_16x16
divide_zero                     = $6215 ; L l_small_divu_16_16x16
l_mulu_16_16x16                 = $6219 ; G l_mulu_16_16x16
l_small_mul_16_16x16            = $6219 ; G l_small_mul_16_16x16
eight_bit_0                     = $6227 ; L l_small_mul_16_16x16
eight_bit_1                     = $6228 ; L l_small_mul_16_16x16
l_small_mul_16_16x8             = $6228 ; G l_small_mul_16_16x16
rejoin                          = $622B ; L l_small_mul_16_16x16
loop_0                          = $622E ; L l_small_mul_16_16x16
loop_1                          = $6235 ; L l_small_mul_16_16x16
_NIRVANAP_drawT_callee          = $6239 ; G NIRVANAP_drawT_callee
__code_math_tail                = $6239 ; G 
__code_network_head             = $6239 ; G 
__code_network_tail             = $6239 ; G 
__code_nirvanam_head            = $6239 ; G 
__code_nirvanam_tail            = $6239 ; G 
__code_nirvanap_head            = $6239 ; G 
asm_NIRVANAP_drawT              = $6242 ; G asm_NIRVANAP_drawT
_NIRVANAP_drawT_raw_callee      = $6248 ; G NIRVANAP_drawT_raw_callee
_NIRVANAP_fillC_callee          = $6251 ; G NIRVANAP_fillC_callee
_NIRVANAP_fillT_callee          = $625A ; G NIRVANAP_fillT_callee
asm_NIRVANAP_fillT              = $6263 ; G asm_NIRVANAP_fillT
_NIRVANAP_paintC_callee         = $6269 ; G NIRVANAP_paintC_callee
_NIRVANAP_spriteT_callee        = $6271 ; G NIRVANAP_spriteT_callee
asm_NIRVANAP_spriteT            = $627D ; G asm_NIRVANAP_spriteT
_NIRVANAP_tiles_fastcall        = $628B ; G NIRVANAP_tiles_fastcall
asm_NIRVANAP_tiles              = $628B ; G asm_NIRVANAP_tiles
__code_nirvanap_tail            = $628F ; G 
__code_setjmp_head              = $628F ; G 
__code_setjmp_tail              = $628F ; G 
__code_stdio_head               = $628F ; G 
__code_stdio_tail               = $628F ; G 
__code_stdlib_head              = $628F ; G 
__insertion_sort__callee        = $628F ; G _insertion_sort__callee
_abs_fastcall                   = $6299 ; G abs_fastcall
asm_abs                         = $6299 ; G asm_abs
_rand                           = $629F ; G rand
asm_rand                        = $629F ; G asm_rand
_srand_fastcall                 = $62B9 ; G srand_fastcall
asm_srand                       = $62B9 ; G asm_srand
seed_ok                         = $62BE ; L asm_srand
asm_random_uniform_xor_32       = $62C5 ; G asm_random_uniform_xor_32
asm_insertion_sort              = $62ED ; G asm_insertion_sort
asm0_insertion_sort             = $62F1 ; L asm_insertion_sort
array_loop                      = $62F7 ; L asm_insertion_sort
begin_loop                      = $6301 ; L asm_insertion_sort
insert_loop                     = $6304 ; L asm_insertion_sort
insert_exit                     = $631D ; L asm_insertion_sort
__sort_parameters               = $6323 ; G __sort_parameters
__code_stdlib_tail              = $633D ; G 
__code_string_head              = $633D ; G 
asm_memset                      = $633D ; G asm_memset
asm_memswap                     = $634E ; G asm_memswap
asm0_memswap                    = $6351 ; G asm_memswap
loop                            = $6352 ; L asm_memswap
__code_string_tail              = $635D ; G 
__code_temp_sp1_head            = $635D ; G 
__code_temp_sp1_tail            = $635D ; G 
__code_threads_head             = $635D ; G 
__code_threads_mutex_head       = $635D ; G 
__code_threads_mutex_tail       = $635D ; G 
__code_threads_tail             = $635D ; G 
__code_z80_head                 = $635D ; G 
_z80_delay_ms_fastcall          = $635D ; G z80_delay_ms_fastcall
asm_z80_delay_ms                = $635D ; G asm_z80_delay_ms
ms_loop                         = $635F ; L asm_z80_delay_ms
last_ms                         = $636C ; L asm_z80_delay_ms
asm_z80_delay_tstate            = $6372 ; G asm_z80_delay_tstate
loop                            = $6379 ; L asm_z80_delay_tstate
g0                              = $6387 ; L asm_z80_delay_tstate
g1                              = $6388 ; L asm_z80_delay_tstate
b0                              = $638C ; L asm_z80_delay_tstate
b1                              = $6391 ; L asm_z80_delay_tstate
__code_compiler_head            = $6394 ; G 
__code_lib_head                 = $6394 ; G 
__code_lib_tail                 = $6394 ; G 
__code_z80_tail                 = $6394 ; G 
_main                           = $6394 ; G zcc1A5E2
l_main_00107                    = $63B9 ; L zcc1A5E2
l_main_00108                    = $63BB ; L zcc1A5E2
l_main_00103                    = $6429 ; L zcc1A5E2
l_main_00101                    = $6433 ; L zcc1A5E2
_enemy_coin1                    = $6457 ; G zcc1A612
l_enemy_coin1_00101             = $6483 ; L zcc1A612
l_enemy_coin1_00107             = $648C ; L zcc1A612
_enemy_coin2                    = $648D ; G zcc1A612
_enemy_collition                = $64AB ; G zcc1A612
l_enemy_collition_00113         = $64B4 ; L zcc1A612
l_enemy_collition_00104         = $6563 ; L zcc1A612
l_enemy_collition_00109         = $65BA ; L zcc1A612
l_enemy_collition_00114         = $65D0 ; L zcc1A612
_enemy_collition_check          = $65DF ; G zcc1A612
l_enemy_collition_check_00102   = $65F1 ; L zcc1A612
l_enemy_collition_check_00104   = $65FB ; L zcc1A612
l_enemy_collition_check_00106   = $6608 ; L zcc1A612
l_enemy_collition_check_00108   = $661D ; L zcc1A612
l_enemy_collition_check_00110   = $6626 ; L zcc1A612
l_enemy_collition_check_00112   = $663B ; L zcc1A612
l_enemy_collition_check_00114   = $6650 ; L zcc1A612
l_enemy_collition_check_00116   = $6658 ; L zcc1A612
l_enemy_collition_check_00118   = $6682 ; L zcc1A612
l_enemy_collition_check_00120   = $66B4 ; L zcc1A612
l_enemy_collition_check_00123   = $66C4 ; L zcc1A612
l_enemy_collition_check_00125   = $66C6 ; L zcc1A612
_enemy_hit                      = $66C7 ; G zcc1A612
l_enemy_hit_00123               = $675D ; L zcc1A612
l_enemy_hit_00101               = $677E ; L zcc1A612
l_enemy_hit_00102               = $6788 ; L zcc1A612
l_enemy_hit_00103               = $6792 ; L zcc1A612
l_enemy_hit_00104               = $679C ; L zcc1A612
l_enemy_hit_00105               = $67A6 ; L zcc1A612
l_enemy_hit_00106               = $67B0 ; L zcc1A612
l_enemy_hit_00107               = $67BA ; L zcc1A612
l_enemy_hit_00108               = $67C4 ; L zcc1A612
l_enemy_hit_00109               = $67D0 ; L zcc1A612
l_enemy_hit_00110               = $67E2 ; L zcc1A612
l_enemy_hit_00111               = $67EE ; L zcc1A612
l_enemy_hit_00113               = $67F8 ; L zcc1A612
_enemy_flip_change_dir          = $67F9 ; G zcc1A612
l_enemy_flip_change_dir_00102   = $682B ; L zcc1A612
l_enemy_flip_change_dir_00103   = $6847 ; L zcc1A612
l_enemy_flip_change_dir_00105   = $687D ; L zcc1A612
l_enemy_flip_change_dir_00107   = $68B2 ; L zcc1A612
l_enemy_flip_change_dir_00111   = $68EA ; L zcc1A612
_enemy_flip                     = $68EE ; G zcc1A612
l_enemy_flip_00105              = $6987 ; L zcc1A612
l_enemy_flip_00102              = $69AC ; L zcc1A612
l_enemy_flip_00103              = $69BC ; L zcc1A612
l_enemy_flip_00107              = $69D3 ; L zcc1A612
_enemy_flip_sidestepper         = $69D7 ; G zcc1A612
l_enemy_flip_sidestepper_00102  = $69F4 ; L zcc1A612
l_enemy_flip_sidestepper_00104  = $6A4A ; L zcc1A612
_enemy_turn                     = $6A4D ; G zcc1A612
l_enemy_turn_00123              = $6A52 ; L zcc1A612
l_enemy_turn_00102              = $6AE3 ; L zcc1A612
l_enemy_turn_00105              = $6B1E ; L zcc1A612
l_enemy_turn_00107              = $6B23 ; L zcc1A612
l_enemy_turn_00176              = $6B44 ; L zcc1A612
l_enemy_turn_00110              = $6B50 ; L zcc1A612
l_enemy_turn_00111              = $6B55 ; L zcc1A612
l_enemy_turn_00112              = $6B5A ; L zcc1A612
l_enemy_turn_00113              = $6B5F ; L zcc1A612
l_enemy_turn_00114              = $6B64 ; L zcc1A612
l_enemy_turn_00115              = $6B69 ; L zcc1A612
l_enemy_turn_00116              = $6B6E ; L zcc1A612
l_enemy_turn_00117              = $6B71 ; L zcc1A612
l_enemy_turn_00121              = $6B83 ; L zcc1A612
_enemy_standard                 = $6B8F ; G zcc1A612
l_enemy_standard_00101          = $6BBB ; L zcc1A612
l_enemy_standard_00110          = $6BC2 ; L zcc1A612
l_enemy_standard_00111          = $6C07 ; L zcc1A612
_enemy_slipice                  = $6C0A ; G zcc1A612
l_enemy_slipice_00102           = $6C67 ; L zcc1A612
l_enemy_slipice_00122           = $6CC5 ; L zcc1A612
l_enemy_slipice_00116           = $6CE8 ; L zcc1A612
l_enemy_slipice_00106           = $6D6F ; L zcc1A612
l_enemy_slipice_00110           = $6D74 ; L zcc1A612
l_enemy_slipice_00111           = $6D77 ; L zcc1A612
l_enemy_slipice_00117           = $6D9A ; L zcc1A612
l_enemy_slipice_00126           = $6DA3 ; L zcc1A612
_enemy_fireball_red             = $6DA4 ; G zcc1A612
l_enemy_fireball_red_00114      = $6DEC ; L zcc1A612
l_enemy_fireball_red_00104      = $6DFC ; L zcc1A612
l_enemy_fireball_red_00105      = $6E10 ; L zcc1A612
l_enemy_fireball_red_00107      = $6E2D ; L zcc1A612
l_enemy_fireball_red_00108      = $6E3E ; L zcc1A612
l_enemy_fireball_red_00109      = $6E71 ; L zcc1A612
l_enemy_fireball_red_00118      = $6E78 ; L zcc1A612
_enemy_fireball_green           = $6E79 ; G zcc1A612
l_enemy_fireball_green_00102    = $6EC9 ; L zcc1A612
l_enemy_fireball_green_00104    = $6ED7 ; L zcc1A612
l_enemy_fireball_green_00105    = $6EDD ; L zcc1A612
l_enemy_fireball_green_00110    = $6EF3 ; L zcc1A612
l_enemy_fireball_green_00106    = $6EFE ; L zcc1A612
l_enemy_fireball_green_00113    = $6F22 ; L zcc1A612
_enemy_fighterfly               = $6F23 ; G zcc1A612
l_enemy_fighterfly_00102        = $6F3E ; L zcc1A612
l_enemy_fighterfly_00106        = $6F81 ; L zcc1A612
l_enemy_fighterfly_00109        = $6FB0 ; L zcc1A612
l_enemy_fighterfly_00115        = $6FB8 ; L zcc1A612
l_enemy_fighterfly_00111        = $6FD3 ; L zcc1A612
l_enemy_fighterfly_00116        = $6FE1 ; L zcc1A612
_enemy_trip                     = $6FE4 ; G zcc1A612
l_enemy_trip_00104              = $704B ; L zcc1A612
l_enemy_trip_00108              = $70A6 ; L zcc1A612
l_enemy_trip_00114              = $70EE ; L zcc1A612
_enemy_standard_hit             = $70EF ; G zcc1A612
l_enemy_standard_hit_00102      = $7121 ; L zcc1A612
_enemy_evolve                   = $715C ; G zcc1A612
l_enemy_evolve_00104            = $7179 ; L zcc1A612
l_enemy_evolve_00105            = $718B ; L zcc1A612
l_enemy_evolve_00109            = $71A9 ; L zcc1A612
l_enemy_evolve_00111            = $71BA ; L zcc1A612
_enemy_upgrade                  = $71BB ; G zcc1A612
_enemy_walk                     = $71ED ; G zcc1A612
l_enemy_walk_00102              = $721F ; L zcc1A612
l_enemy_walk_00106              = $723D ; L zcc1A612
l_enemy_walk_00107              = $7263 ; L zcc1A612
l_enemy_walk_00110              = $7275 ; L zcc1A612
l_enemy_walk_00112              = $728E ; L zcc1A612
l_enemy_walk_00114              = $72A6 ; L zcc1A612
l_enemy_walk_00115              = $72B5 ; L zcc1A612
l_enemy_walk_00212              = $72FA ; L zcc1A612
l_enemy_walk_00133              = $7303 ; L zcc1A612
l_enemy_walk_00121              = $7328 ; L zcc1A612
l_enemy_walk_00123              = $736D ; L zcc1A612
l_enemy_walk_00125              = $7370 ; L zcc1A612
l_enemy_walk_00128              = $73A7 ; L zcc1A612
l_enemy_walk_00135              = $73CB ; L zcc1A612
_enemy_init                     = $73CC ; G zcc1A612
l_enemy_init_00102              = $743A ; L zcc1A612
l_enemy_init_00103              = $743E ; L zcc1A612
_enemy_kill                     = $7493 ; G zcc1A612
l_enemy_kill_00102              = $74BB ; L zcc1A612
l_enemy_kill_00103              = $74C0 ; L zcc1A612
l_enemy_kill_00105              = $74E2 ; L zcc1A612
l_enemy_kill_00144              = $74FA ; L zcc1A612
l_enemy_kill_00145              = $74FE ; L zcc1A612
l_enemy_kill_00107              = $7545 ; L zcc1A612
l_enemy_kill_00109              = $7549 ; L zcc1A612
l_enemy_kill_00113              = $7557 ; L zcc1A612
l_enemy_kill_00115              = $7566 ; L zcc1A612
_game_calc_index                = $756A ; G zcc1B142
_game_print_footer              = $7586 ; G zcc1B142
l_game_print_footer_00102       = $75D8 ; L zcc1B142
l_game_print_footer_00104       = $75FE ; L zcc1B142
_game_phase_print_score_back    = $761B ; G zcc1B142
_game_print_lives               = $7651 ; G zcc1B142
l_game_print_lives_00102        = $766D ; L zcc1B142
_game_tick                      = $7684 ; G zcc1B142
_game_start_timer               = $7690 ; G zcc1B142
_game_phase_calc                = $769C ; G zcc1B142
l_game_phase_calc_00102         = $76E3 ; L zcc1B142
_game_phase_init                = $76FF ; G zcc1B142
l_game_phase_init_00104         = $77D2 ; L zcc1B142
l_game_phase_init_00105         = $77E7 ; L zcc1B142
l_game_phase_init_00107         = $77F6 ; L zcc1B142
l_game_phase_init_00109         = $7814 ; L zcc1B142
l_game_phase_init_00111         = $7827 ; L zcc1B142
_game_print_header              = $7830 ; G zcc1B142
_game_phase_print               = $783B ; G zcc1B142
l_game_phase_print_00102        = $786A ; L zcc1B142
l_game_phase_print_00108        = $7879 ; L zcc1B142
l_game_phase_print_00105        = $788F ; L zcc1B142
l_game_phase_print_00109        = $789C ; L zcc1B142
_game_loop                      = $78B2 ; G zcc1B142
l_game_loop_00102               = $7900 ; L zcc1B142
l_game_loop_00103               = $7902 ; L zcc1B142
l_game_loop_00105               = $7931 ; L zcc1B142
l_game_loop_00106               = $793D ; L zcc1B142
l_game_loop_00134               = $7960 ; L zcc1B142
l_game_loop_00111               = $7992 ; L zcc1B142
l_game_loop_00113               = $79B6 ; L zcc1B142
l_game_loop_00137               = $79C7 ; L zcc1B142
l_game_loop_00138               = $7A0A ; L zcc1B142
l_game_loop_00120               = $7A14 ; L zcc1B142
l_game_loop_00123               = $7A32 ; L zcc1B142
l_game_loop_00125               = $7A3E ; L zcc1B142
l_game_loop_00127               = $7A51 ; L zcc1B142
l_game_loop_00133               = $7A54 ; L zcc1B142
l_game_loop_00136               = $7A60 ; L zcc1B142
_game_score_osd                 = $7A9C ; G zcc1B142
l_game_score_osd_00105          = $7AFF ; L zcc1B142
l_game_score_osd_00102          = $7B12 ; L zcc1B142
l_game_score_osd_00117          = $7B1E ; L zcc1B142
l_game_score_osd_00110          = $7B9B ; L zcc1B142
l_game_score_osd_00119          = $7BE0 ; L zcc1B142
_game_bonus_clock               = $7BE1 ; G zcc1B142
l_game_bonus_clock_00106        = $7C10 ; L zcc1B142
l_game_bonus_clock_00108        = $7C46 ; L zcc1B142
_game_bonus_summary             = $7C47 ; G zcc1B142
l_game_bonus_summary_00102      = $7C66 ; L zcc1B142
l_game_bonus_summary_00104      = $7C74 ; L zcc1B142
l_game_bonus_summary_00106      = $7CBE ; L zcc1B142
l_game_bonus_summary_00107      = $7CE3 ; L zcc1B142
l_game_bonus_summary_00109      = $7CF7 ; L zcc1B142
l_game_bonus_summary_00112      = $7D08 ; L zcc1B142
_game_bonus_summary_player      = $7D09 ; G zcc1B142
l_game_bonus_summary_player_00102 = $7D44 ; L zcc1B142
l_game_bonus_summary_player_00103 = $7D72 ; L zcc1B142
l_game_bonus_summary_player_00107 = $7D9B ; L zcc1B142
l_game_bonus_summary_player_00105 = $7DBC ; L zcc1B142
l_game_bonus_summary_player_00106 = $7DC2 ; L zcc1B142
l_game_bonus_summary_player_00109 = $7DF9 ; L zcc1B142
_game_kill_all_sprites          = $7E0A ; G zcc1B142
l_game_kill_all_sprites_00102   = $7E0F ; L zcc1B142
_game_check_maze                = $7E23 ; G zcc1B142
l_game_check_maze_00103         = $7E47 ; L zcc1B142
l_game_check_maze_00104         = $7E4B ; L zcc1B142
l_game_check_maze_00105         = $7E4D ; L zcc1B142
_game_enemy_add                 = $7E50 ; G zcc1B142
l_game_enemy_add_00106          = $7E5C ; L zcc1B142
l_game_enemy_add_00107          = $7E7D ; L zcc1B142
_game_enemy_quota               = $7E80 ; G zcc1B142
l_game_enemy_quota_00101        = $7E95 ; L zcc1B142
l_game_enemy_quota_00102        = $7E9A ; L zcc1B142
l_game_enemy_quota_00105        = $7EC4 ; L zcc1B142
l_game_enemy_quota_00107        = $7EDE ; L zcc1B142
l_game_enemy_quota_00111        = $7EF5 ; L zcc1B142
l_game_enemy_quota_00114        = $7F08 ; L zcc1B142
l_game_enemy_quota_00184        = $7F22 ; L zcc1B142
l_game_enemy_quota_00185        = $7F2D ; L zcc1B142
l_game_enemy_quota_00115        = $7F35 ; L zcc1B142
l_game_enemy_quota_00118        = $7F47 ; L zcc1B142
l_game_enemy_quota_00121        = $7F62 ; L zcc1B142
l_game_enemy_quota_00124        = $7F7D ; L zcc1B142
l_game_enemy_quota_00127        = $7F96 ; L zcc1B142
l_game_enemy_quota_00128        = $7F98 ; L zcc1B142
_game_enemy_rnd                 = $7F99 ; G zcc1B142
l_game_enemy_rnd_00102          = $7FCB ; L zcc1B142
_game_enemy_add1                = $7FCE ; G zcc1B142
l_game_enemy_add1_00197         = $7FEA ; L zcc1B142
l_game_enemy_add1_00198         = $7FEB ; L zcc1B142
l_game_enemy_add1_00107         = $7FFD ; L zcc1B142
TAR__crt_org_code               = $8000 ; L zcc1D8318
l_game_enemy_add1_00201         = $8008 ; L zcc1B142
l_game_enemy_add1_00202         = $8009 ; L zcc1B142
l_game_enemy_add1_00109         = $801B ; L zcc1B142
l_game_enemy_add1_00101         = $8030 ; L zcc1B142
l_game_enemy_add1_00102         = $8035 ; L zcc1B142
l_game_enemy_add1_00111         = $806D ; L zcc1B142
l_game_enemy_add1_00115         = $8074 ; L zcc1B142
l_game_enemy_add1_00113         = $8089 ; L zcc1B142
l_game_enemy_add1_00116         = $808E ; L zcc1B142
l_game_enemy_add1_00210         = $8099 ; L zcc1B142
l_game_enemy_add1_00211         = $809A ; L zcc1B142
l_game_enemy_add1_00118         = $80A2 ; L zcc1B142
l_game_enemy_add1_00125         = $80AE ; L zcc1B142
l_game_enemy_add1_00120         = $80C6 ; L zcc1B142
l_game_enemy_add1_00122         = $80D1 ; L zcc1B142
l_game_enemy_add1_00124         = $80DD ; L zcc1B142
l_game_enemy_add1_00126         = $80E3 ; L zcc1B142
l_game_enemy_add1_00129         = $80F7 ; L zcc1B142
l_game_enemy_add1_00132         = $80FD ; L zcc1B142
l_game_enemy_add1_00133         = $8125 ; L zcc1B142
_game_enemy_add_get_index       = $8128 ; G zcc1B142
l_game_enemy_add_get_index_00104 = $8130 ; L zcc1B142
l_game_enemy_add_get_index_00105 = $8147 ; L zcc1B142
l_game_enemy_add_get_index_00106 = $8152 ; L zcc1B142
_game_freeze                    = $8155 ; G zcc1B142
l_game_freeze_00102             = $81AA ; L zcc1B142
l_game_freeze_00107             = $81BE ; L zcc1B142
_game_unfreeze_all              = $81C1 ; G zcc1B142
l_game_unfreeze_all_00104       = $81C7 ; L zcc1B142
l_game_unfreeze_all_00105       = $81D5 ; L zcc1B142
l_game_unfreeze_all_00118       = $81DD ; L zcc1B142
_game_freeze_all                = $81EA ; G zcc1B142
l_game_freeze_all_00104         = $81F0 ; L zcc1B142
l_game_freeze_all_00105         = $81FE ; L zcc1B142
l_game_freeze_all_00118         = $8206 ; L zcc1B142
_game_print_score               = $8213 ; G zcc1B142
_game_paint_attrib              = $8244 ; G zcc1B142
l_game_paint_attrib_00103       = $824D ; L zcc1B142
l_game_paint_attrib_00105       = $826E ; L zcc1B142
_game_paint_attrib_lin          = $8271 ; G zcc1B142
l_game_paint_attrib_lin_00103   = $827A ; L zcc1B142
l_game_paint_attrib_lin_00105   = $8295 ; L zcc1B142
_game_paint_attrib_lin_h        = $8298 ; G zcc1B142
l_game_paint_attrib_lin_h_00103 = $82A1 ; L zcc1B142
l_game_paint_attrib_lin_h_00105 = $82BC ; L zcc1B142
_game_menu_config               = $82BF ; G zcc1B142
l_game_menu_config_00116        = $82D0 ; L zcc1B142
l_game_menu_config_00101        = $82D7 ; L zcc1B142
l_game_menu_config_00121        = $82F6 ; L zcc1B142
l_game_menu_config_00122        = $82FE ; L zcc1B142
l_game_menu_config_00123        = $8344 ; L zcc1B142
l_game_menu_config_00124        = $8347 ; L zcc1B142
l_game_menu_config_00164        = $8360 ; L zcc1B142
l_game_menu_config_00104        = $8366 ; L zcc1B142
l_game_menu_config_00105        = $8373 ; L zcc1B142
l_game_menu_config_00106        = $8380 ; L zcc1B142
l_game_menu_config_00107        = $838B ; L zcc1B142
l_game_menu_config_00165        = $83E2 ; L zcc1B142
l_game_menu_config_00108        = $83EC ; L zcc1B142
l_game_menu_config_00125        = $83F6 ; L zcc1B142
l_game_menu_config_00126        = $83F8 ; L zcc1B142
l_game_menu_config_00109        = $8400 ; L zcc1B142
l_game_menu_config_00112        = $840F ; L zcc1B142
l_game_menu_config_00113        = $8419 ; L zcc1B142
l_game_menu_config_00114        = $8424 ; L zcc1B142
l_game_menu_config_00119        = $8433 ; L zcc1B142
_game_joystick_change           = $8438 ; G zcc1B142
l_game_joystick_change_00102    = $8461 ; L zcc1B142
l_game_joystick_change_00104    = $847C ; L zcc1B142
l_game_joystick_change_00107    = $8493 ; L zcc1B142
l_game_joystick_change_00110    = $84B1 ; L zcc1B142
l_game_joystick_change_00114    = $84B7 ; L zcc1B142
_game_joystick_set_menu         = $84BA ; G zcc1B142
_game_joystick_set              = $84C7 ; G zcc1B142
_game_menu                      = $84E4 ; G zcc1B142
l_game_menu_00101               = $84F3 ; L zcc1B142
l_game_menu_00125               = $8527 ; L zcc1B142
l_game_menu_00104               = $852D ; L zcc1B142
l_game_menu_00105               = $8537 ; L zcc1B142
l_game_menu_00106               = $8541 ; L zcc1B142
_game_menu_top_paint            = $8546 ; G zcc1B142
l_game_menu_top_paint_00102     = $857E ; L zcc1B142
_game_menu_paint                = $85BC ; G zcc1B142
_game_menu_e                    = $863A ; G zcc1B142
l_game_menu_e_00114             = $864E ; L zcc1B142
l_game_menu_e_00102             = $8670 ; L zcc1B142
l_game_menu_e_00104             = $868C ; L zcc1B142
l_game_menu_e_00108             = $86A6 ; L zcc1B142
l_game_menu_e_00109             = $86AD ; L zcc1B142
l_game_menu_e_00111             = $86BD ; L zcc1B142
l_game_menu_e_00112             = $86C5 ; L zcc1B142
_game_menu_handle               = $86ED ; G zcc1B142
l_game_menu_handle_00148        = $8703 ; L zcc1B142
l_game_menu_handle_00149        = $8707 ; L zcc1B142
l_game_menu_handle_00111        = $8716 ; L zcc1B142
l_game_menu_handle_00104        = $8773 ; L zcc1B142
l_game_menu_handle_00106        = $8793 ; L zcc1B142
l_game_menu_handle_00113        = $87C8 ; L zcc1B142
_game_end                       = $87DC ; G zcc1B142
l_game_end_00129                = $87F2 ; L zcc1B142
l_game_end_00131                = $880B ; L zcc1B142
l_game_end_00133                = $8824 ; L zcc1B142
l_game_end_00105                = $8881 ; L zcc1B142
l_game_end_00109                = $888D ; L zcc1B142
l_game_end_00110                = $8891 ; L zcc1B142
l_game_end_00221                = $889B ; L zcc1B142
l_game_end_00222                = $889C ; L zcc1B142
l_game_end_00112                = $88BE ; L zcc1B142
l_game_end_00223                = $88C8 ; L zcc1B142
l_game_end_00224                = $88C9 ; L zcc1B142
l_game_end_00115                = $88EE ; L zcc1B142
l_game_end_00118                = $891B ; L zcc1B142
l_game_end_00121                = $8965 ; L zcc1B142
l_game_end_00124                = $899D ; L zcc1B142
l_game_end_00127                = $89F6 ; L zcc1B142
_game_hall_check                = $8A48 ; G zcc1B142
l_game_hall_check_00104         = $8A69 ; L zcc1B142
l_game_hall_check_00105         = $8A7A ; L zcc1B142
l_game_hall_check_00106         = $8A7D ; L zcc1B142
_compare_scores                 = $8A80 ; G zcc1B142
_game_hall_enter                = $8AA6 ; G zcc1B142
l_game_hall_enter_00102         = $8AD8 ; L zcc1B142
l_game_hall_enter_00103         = $8AEB ; L zcc1B142
l_game_hall_enter_00125         = $8AF4 ; L zcc1B142
l_game_hall_enter_00105         = $8B19 ; L zcc1B142
l_game_hall_enter_00107         = $8B2D ; L zcc1B142
l_game_hall_enter_00122         = $8B5E ; L zcc1B142
l_game_hall_enter_00109         = $8B95 ; L zcc1B142
l_game_hall_enter_00111         = $8BA6 ; L zcc1B142
l_game_hall_enter_00113         = $8BAF ; L zcc1B142
l_game_hall_enter_00190         = $8BE1 ; L zcc1B142
l_game_hall_enter_00115         = $8BE6 ; L zcc1B142
l_game_hall_enter_00191         = $8C1E ; L zcc1B142
l_game_hall_enter_00119         = $8C23 ; L zcc1B142
l_game_hall_enter_00124         = $8C2C ; L zcc1B142
l_game_hall_enter_00126         = $8C44 ; L zcc1B142
_game_menu_back                 = $8C52 ; G zcc1B142
_game_hall_enter_phs            = $8C6F ; G zcc1B142
l_game_hall_enter_phs_00102     = $8CB2 ; L zcc1B142
l_game_hall_enter_phs_00104     = $8CEA ; L zcc1B142
_game_hall_print_p              = $8CED ; G zcc1B142
l_game_hall_print_p_00102       = $8D38 ; L zcc1B142
l_game_hall_print_p_00108       = $8D50 ; L zcc1B142
l_game_hall_print_p_00105       = $8D92 ; L zcc1B142
l_game_hall_print_p_00110       = $8DA8 ; L zcc1B142
_game_hall_edit_p               = $8DAB ; G zcc1B142
l_game_hall_edit_p_00102        = $8DD8 ; L zcc1B142
l_game_hall_edit_p_00103        = $8DF0 ; L zcc1B142
l_game_hall_edit_p_00107        = $8E26 ; L zcc1B142
l_game_hall_edit_p_00120        = $8E32 ; L zcc1B142
l_game_hall_edit_p_00168        = $8E49 ; L zcc1B142
l_game_hall_edit_p_00167        = $8E53 ; L zcc1B142
l_game_hall_edit_p_00115        = $8E64 ; L zcc1B142
l_game_hall_edit_p_00116        = $8E6C ; L zcc1B142
l_game_hall_edit_p_00121        = $8E6E ; L zcc1B142
l_game_hall_edit_p_00122        = $8E73 ; L zcc1B142
_game_hall_of_fame              = $8E76 ; G zcc1B142
l_game_hall_of_fame_00102       = $8EA8 ; L zcc1B142
_game_rotate_attrib             = $8F49 ; G zcc1B142
_game_colour_message            = $8F65 ; G zcc1B142
l_game_colour_message_00107     = $8F87 ; L zcc1B142
l_game_colour_message_00103     = $8FCC ; L zcc1B142
l_game_colour_message_00110     = $8FF3 ; L zcc1B142
_game_check_time                = $8FF7 ; G zcc1B142
l_game_check_time_00102         = $9015 ; L zcc1B142
l_game_check_time_00104         = $9017 ; L zcc1B142
_player_init                    = $901A ; G zcc1C042
l_player_init_00102             = $90CA ; L zcc1C042
l_player_init_00103             = $90D3 ; L zcc1C042
_player_calc_slide              = $910D ; G zcc1C042
l_player_calc_slide_00102       = $913C ; L zcc1C042
l_player_calc_slide_00104       = $914A ; L zcc1C042
_player_check_input             = $914D ; G zcc1C042
l_player_check_input_00104      = $9168 ; L zcc1C042
l_player_check_input_00105      = $916A ; L zcc1C042
_player_collition               = $916B ; G zcc1C042
l_player_collition_00102        = $917E ; L zcc1C042
l_player_collition_00104        = $9192 ; L zcc1C042
l_player_collition_00106        = $919A ; L zcc1C042
l_player_collition_00119        = $91A4 ; L zcc1C042
l_player_collition_00114        = $91C6 ; L zcc1C042
l_player_collition_00109        = $91DA ; L zcc1C042
l_player_collition_00110        = $91E6 ; L zcc1C042
l_player_collition_00120        = $91EC ; L zcc1C042
l_player_collition_00121        = $91FB ; L zcc1C042
_player_collition_check         = $91FC ; G zcc1C042
l_player_collition_check_00102  = $9213 ; L zcc1C042
l_player_collition_check_00104  = $9228 ; L zcc1C042
l_player_collition_check_00109  = $9267 ; L zcc1C042
l_player_collition_check_00110  = $9278 ; L zcc1C042
l_player_collition_check_00111  = $9289 ; L zcc1C042
l_player_collition_check_00114  = $92DF ; L zcc1C042
l_player_collition_check_00116  = $92FE ; L zcc1C042
l_player_collition_check_00118  = $9313 ; L zcc1C042
l_player_collition_check_00120  = $9330 ; L zcc1C042
l_player_collition_check_00122  = $9343 ; L zcc1C042
l_player_collition_check_00124  = $936B ; L zcc1C042
l_player_collition_check_00125  = $936D ; L zcc1C042
_player_kill                    = $9371 ; G zcc1C042
l_player_kill_00102             = $93BD ; L zcc1C042
l_player_kill_00103             = $93CE ; L zcc1C042
l_player_kill_00105             = $9436 ; L zcc1C042
l_player_kill_00109             = $9452 ; L zcc1C042
_player_restart                 = $9453 ; G zcc1C042
l_player_restart_00102          = $947C ; L zcc1C042
l_player_restart_00103          = $9493 ; L zcc1C042
_player_lost_life               = $94D3 ; G zcc1C042
l_player_lost_life_00102        = $9501 ; L zcc1C042
l_player_lost_life_00105        = $9505 ; L zcc1C042
l_player_lost_life_00106        = $950D ; L zcc1C042
_player_turn                    = $950E ; G zcc1C042
l_player_turn_00102             = $955C ; L zcc1C042
l_player_turn_00103             = $956B ; L zcc1C042
l_player_turn_00110             = $9571 ; L zcc1C042
_player_move                    = $9572 ; G zcc1C042
l_player_move_00102             = $95FE ; L zcc1C042
l_player_move_00104             = $9603 ; L zcc1C042
l_player_move_00108             = $9626 ; L zcc1C042
l_player_move_00109             = $9672 ; L zcc1C042
l_player_move_00111             = $96A4 ; L zcc1C042
l_player_move_00113             = $96B5 ; L zcc1C042
l_player_move_00115             = $973B ; L zcc1C042
l_player_move_00117             = $9740 ; L zcc1C042
l_player_move_00119             = $9767 ; L zcc1C042
l_player_move_00122             = $976C ; L zcc1C042
l_player_move_00126             = $97D4 ; L zcc1C042
l_player_move_00130             = $9812 ; L zcc1C042
l_player_move_00133             = $9877 ; L zcc1C042
l_player_move_00135             = $98AD ; L zcc1C042
l_player_move_00139             = $98DB ; L zcc1C042
l_player_move_00141             = $996E ; L zcc1C042
l_player_move_00168             = $9996 ; L zcc1C042
l_player_move_00152             = $9A01 ; L zcc1C042
l_player_move_00153             = $9A1F ; L zcc1C042
l_player_move_00154             = $9A2C ; L zcc1C042
l_player_move_00165             = $9A31 ; L zcc1C042
l_player_move_00157             = $9A60 ; L zcc1C042
l_player_move_00158             = $9A63 ; L zcc1C042
l_player_move_00169             = $9A9A ; L zcc1C042
l_player_move_00172             = $9ACD ; L zcc1C042
l_player_move_00173             = $9AE1 ; L zcc1C042
_player_move_input              = $9AE6 ; G zcc1C042
l_player_move_input_00102       = $9B34 ; L zcc1C042
l_player_move_input_00105       = $9B5F ; L zcc1C042
l_player_move_input_00107       = $9B8A ; L zcc1C042
l_player_move_input_00109       = $9BCF ; L zcc1C042
l_player_move_input_00111       = $9C4F ; L zcc1C042
l_player_move_input_00113       = $9C62 ; L zcc1C042
l_player_move_input_00116       = $9C90 ; L zcc1C042
l_player_move_input_00118       = $9C94 ; L zcc1C042
l_player_move_input_00120       = $9C97 ; L zcc1C042
l_player_move_input_00123       = $9C9B ; L zcc1C042
l_player_move_input_00124       = $9C9D ; L zcc1C042
_player_move_horizontal         = $9C9E ; G zcc1C042
l_player_move_horizontal_00102  = $9CAA ; L zcc1C042
l_player_move_horizontal_00104  = $9CAD ; L zcc1C042
_player_push_check              = $9CAE ; G zcc1C042
l_player_push_check_00102       = $9CBF ; L zcc1C042
l_player_push_check_00104       = $9CD3 ; L zcc1C042
l_player_push_check_00106       = $9D02 ; L zcc1C042
l_player_push_check_00109       = $9D1D ; L zcc1C042
l_player_push_check_00111       = $9D1F ; L zcc1C042
_player_push                    = $9D20 ; G zcc1C042
l_player_push_00102             = $9D84 ; L zcc1C042
l_player_push_00103             = $9D87 ; L zcc1C042
_player_hit_brick               = $9DA3 ; G zcc1C042
l_player_hit_brick_00114        = $9DCB ; L zcc1C042
l_player_hit_brick_00166        = $9E2E ; L zcc1C042
l_player_hit_brick_00115        = $9E37 ; L zcc1C042
l_player_hit_brick_00169        = $9E99 ; L zcc1C042
l_player_hit_brick_00108        = $9F23 ; L zcc1C042
l_player_hit_brick_00112        = $9F6F ; L zcc1C042
l_player_hit_brick_00116        = $9F71 ; L zcc1C042
_player_hit_brick_clear         = $9F72 ; G zcc1C042
_player_hit_pow                 = $9FC0 ; G zcc1C042
l_player_hit_pow_00106          = $9FDF ; L zcc1C042
l_player_hit_pow_00110          = $9FEE ; L zcc1C042
l_player_hit_pow_00111          = $A013 ; L zcc1C042
l_player_hit_pow_00105          = $A042 ; L zcc1C042
l_player_hit_pow_00107          = $A04C ; L zcc1C042
l_player_hit_pow_00112          = $A04E ; L zcc1C042
_player_coin                    = $A04F ; G zcc1C042
l_player_coin_00102             = $A078 ; L zcc1C042
l_player_coin_00103             = $A08F ; L zcc1C042
l_player_coin_00107             = $A0D0 ; L zcc1C042
l_player_coin_00109             = $A0DA ; L zcc1C042
_player_score_add               = $A0DD ; G zcc1C042
l_player_score_add_00102        = $A11A ; L zcc1C042
l_player_score_add_00104        = $A148 ; L zcc1C042
l_player_score_add_00106        = $A159 ; L zcc1C042
_player_set1                    = $A15E ; G zcc1C042
_player_set2                    = $A178 ; G zcc1C042
_spr_chktime                    = $A192 ; G zcc1D472
l_spr_chktime_00102             = $A1BD ; L zcc1D472
l_spr_chktime_00103             = $A1C0 ; L zcc1D472
l_spr_chktime_00105             = $A1FB ; L zcc1D472
l_spr_chktime_00106             = $A1FD ; L zcc1D472
_spr_move_up                    = $A201 ; G zcc1D472
l_spr_move_up_00109             = $A215 ; L zcc1D472
l_spr_move_up_00104             = $A25E ; L zcc1D472
l_spr_move_up_00110             = $A265 ; L zcc1D472
l_spr_move_up_00113             = $A293 ; L zcc1D472
l_spr_move_up_00114             = $A295 ; L zcc1D472
_spr_move_down                  = $A296 ; G zcc1D472
l_spr_move_down_00102           = $A2F3 ; L zcc1D472
l_spr_move_down_00106           = $A2F7 ; L zcc1D472
l_spr_move_down_00108           = $A31D ; L zcc1D472
l_spr_move_down_00109           = $A31F ; L zcc1D472
_spr_move_horizontal            = $A320 ; G zcc1D472
l_spr_move_horizontal_00104     = $A335 ; L zcc1D472
l_spr_move_horizontal_00106     = $A33B ; L zcc1D472
_spr_move_right                 = $A33C ; G zcc1D472
l_spr_move_right_00104          = $A377 ; L zcc1D472
_spr_move_left                  = $A37A ; G zcc1D472
l_spr_move_left_00104           = $A3B5 ; L zcc1D472
_spr_redraw                     = $A3B8 ; G zcc1D472
l_spr_redraw_00111              = $A3F2 ; L zcc1D472
l_spr_redraw_00102              = $A406 ; L zcc1D472
l_spr_redraw_00104              = $A44B ; L zcc1D472
l_spr_redraw_00106              = $A45A ; L zcc1D472
l_spr_redraw_00112              = $A45F ; L zcc1D472
l_spr_redraw_00113              = $A475 ; L zcc1D472
l_spr_redraw_00115              = $A477 ; L zcc1D472
_spr_killed                     = $A478 ; G zcc1D472
l_spr_killed_00101              = $A49F ; L zcc1D472
l_spr_killed_00102              = $A4AF ; L zcc1D472
l_spr_killed_00103              = $A4BF ; L zcc1D472
l_spr_killed_00104              = $A4CF ; L zcc1D472
l_spr_killed_00105              = $A4E8 ; L zcc1D472
l_spr_killed_00106              = $A501 ; L zcc1D472
l_spr_killed_00107              = $A50A ; L zcc1D472
_spr_anim_fall                  = $A50F ; G zcc1D472
l_spr_anim_fall_00114           = $A563 ; L zcc1D472
l_spr_anim_fall_00102           = $A5A5 ; L zcc1D472
l_spr_anim_fall_00107           = $A5EA ; L zcc1D472
l_spr_anim_fall_00108           = $A5FE ; L zcc1D472
l_spr_anim_fall_00110           = $A609 ; L zcc1D472
l_spr_anim_fall_00116           = $A613 ; L zcc1D472
_spr_anim_kill                  = $A617 ; G zcc1D472
l_spr_anim_kill_00102           = $A652 ; L zcc1D472
l_spr_anim_kill_00104           = $A65F ; L zcc1D472
l_spr_anim_kill_00106           = $A696 ; L zcc1D472
l_spr_anim_kill_00108           = $A69F ; L zcc1D472
_spr_check_over                 = $A6A3 ; G zcc1D472
l_spr_check_over_00102          = $A6C6 ; L zcc1D472
l_spr_check_over_00112          = $A6D1 ; L zcc1D472
l_spr_check_over_00106          = $A6E4 ; L zcc1D472
l_spr_check_over_00113          = $A6EF ; L zcc1D472
l_spr_check_over_00114          = $A6F1 ; L zcc1D472
_spr_destroy                    = $A6F2 ; G zcc1D472
l_spr_destroy_00103             = $A76D ; L zcc1D472
_spr_set_fall                   = $A771 ; G zcc1D472
l_spr_set_fall_00104            = $A78E ; L zcc1D472
l_spr_set_fall_00106            = $A7AA ; L zcc1D472
_spr_tile                       = $A7AB ; G zcc1D472
l_spr_tile_00102                = $A7C5 ; L zcc1D472
l_spr_tile_00103                = $A7CA ; L zcc1D472
l_spr_tile_00105                = $A7DF ; L zcc1D472
l_spr_tile_00139                = $A806 ; L zcc1D472
l_spr_tile_00106                = $A82A ; L zcc1D472
l_spr_tile_00107                = $A83B ; L zcc1D472
l_spr_tile_00108                = $A84C ; L zcc1D472
l_spr_tile_00109                = $A85D ; L zcc1D472
l_spr_tile_00110                = $A863 ; L zcc1D472
l_spr_tile_00111                = $A869 ; L zcc1D472
l_spr_tile_00112                = $A86F ; L zcc1D472
l_spr_tile_00113                = $A874 ; L zcc1D472
l_spr_tile_00114                = $A879 ; L zcc1D472
l_spr_tile_00115                = $A87E ; L zcc1D472
l_spr_tile_00116                = $A883 ; L zcc1D472
l_spr_tile_00117                = $A888 ; L zcc1D472
l_spr_tile_00118                = $A88D ; L zcc1D472
l_spr_tile_00119                = $A890 ; L zcc1D472
_spr_tile_dir                   = $A893 ; G zcc1D472
l_spr_tile_dir_00102            = $A8B3 ; L zcc1D472
l_spr_tile_dir_00104            = $A8D0 ; L zcc1D472
l_spr_tile_dir_00106            = $A8DC ; L zcc1D472
l_spr_tile_dir_00108            = $A8F0 ; L zcc1D472
l_spr_tile_dir_00110            = $A8FC ; L zcc1D472
l_spr_tile_dir_00112            = $A903 ; L zcc1D472
l_spr_tile_dir_00113            = $A906 ; L zcc1D472
_spr_draw_back                  = $A909 ; G zcc1D472
l_spr_draw_back_00107           = $A918 ; L zcc1D472
l_spr_draw_back_00105           = $A91D ; L zcc1D472
l_spr_draw_back_00106           = $A945 ; L zcc1D472
_spr_draw_clear                 = $A99C ; G zcc1D472
l_spr_draw_clear_00105          = $A9A8 ; L zcc1D472
l_spr_draw_clear_00103          = $A9AD ; L zcc1D472
_spr_draw_pow                   = $A9D5 ; G zcc1D472
l_spr_draw_pow_00102            = $A9E4 ; L zcc1D472
l_spr_draw_pow_00104            = $A9F0 ; L zcc1D472
l_spr_draw_pow_00106            = $A9FB ; L zcc1D472
l_spr_draw_pow_00109            = $AA12 ; L zcc1D472
_spr_back_clr                   = $AA13 ; G zcc1D472
_spr_back_fix                   = $AA55 ; G zcc1D472
l_spr_back_fix_00118            = $AA7E ; L zcc1D472
l_spr_back_fix_00119            = $AA80 ; L zcc1D472
l_spr_back_fix_00121            = $AA9C ; L zcc1D472
l_spr_back_fix_00122            = $AA9E ; L zcc1D472
l_spr_back_fix_00107            = $AAB2 ; L zcc1D472
l_spr_back_fix_00102            = $AB0A ; L zcc1D472
l_spr_back_fix_00105            = $AB22 ; L zcc1D472
l_spr_back_fix_00108            = $AB32 ; L zcc1D472
l_spr_back_fix_00115            = $AB4F ; L zcc1D472
_spr_back_fix1                  = $AB52 ; G zcc1D472
_spr_back_fix2                  = $AB93 ; G zcc1D472
_spr_back_fix3                  = $ABD4 ; G zcc1D472
_spr_back_fix4                  = $AC16 ; G zcc1D472
_spr_brick_anim                 = $AC58 ; G zcc1D472
l_spr_brick_anim_00101          = $AC79 ; L zcc1D472
l_spr_brick_anim_00102          = $AC7F ; L zcc1D472
l_spr_brick_anim_00104          = $AC8B ; L zcc1D472
l_spr_brick_anim_00105          = $AC90 ; L zcc1D472
l_spr_brick_anim_00108          = $ACA7 ; L zcc1D472
l_spr_brick_anim_00109          = $ACB6 ; L zcc1D472
l_spr_brick_anim_00111          = $ACD4 ; L zcc1D472
l_spr_brick_anim_00114          = $ACEE ; L zcc1D472
l_spr_brick_anim_00117          = $AD11 ; L zcc1D472
l_spr_brick_anim_00120          = $AD3B ; L zcc1D472
_spr_cortina_brick              = $AD3F ; G zcc1D472
l_spr_cortina_brick_00101       = $AD53 ; L zcc1D472
l_spr_cortina_brick_00103       = $AD7B ; L zcc1D472
_spr_cortina_pipes              = $AD87 ; G zcc1D472
l_spr_cortina_pipes_00130       = $AD8D ; L zcc1D472
l_spr_cortina_pipes_00117       = $AD9C ; L zcc1D472
l_spr_cortina_pipes_00101       = $ADA9 ; L zcc1D472
l_spr_cortina_pipes_00102       = $ADAA ; L zcc1D472
l_spr_cortina_pipes_00106       = $ADBD ; L zcc1D472
l_spr_cortina_pipes_00137       = $ADEB ; L zcc1D472
l_spr_cortina_pipes_00121       = $ADFA ; L zcc1D472
l_spr_cortina_pipes_00109       = $AE07 ; L zcc1D472
l_spr_cortina_pipes_00110       = $AE08 ; L zcc1D472
l_spr_cortina_pipes_00122       = $AE28 ; L zcc1D472
_spr_water_splash_draw          = $AE42 ; G zcc1D472
l_spr_water_splash_draw_00103   = $AE85 ; L zcc1D472
_spr_water_splash_clear         = $AE88 ; G zcc1D472
__code_compiler_tail            = $AED4 ; G 
__code_user_head                = $AED4 ; G 
_ay_reset                       = $AED4 ; G zcc1D8311
_ay_is_playing                  = $AEDA ; G zcc1D8311
answer_known                    = $AEF7 ; L zcc1D8311
_ay_midi_play                   = $AEFC ; G zcc1D8311
midi_play                       = $AF04 ; L zcc1D8311
midi_disable                    = $AF1A ; L zcc1D8311
_ay_fx_play                     = $AF25 ; G zcc1D8311
ay_play                         = $AF2D ; L zcc1D8311
ay_disable                      = $AF3F ; L zcc1D8311
_game_fill_row                  = $AF4A ; G zcc1D8314
game_fill_row                   = $AF51 ; L zcc1D8314
gf_ploop                        = $AF5E ; L zcc1D8314
_sound_nirvana_halt             = $AF89 ; L zcc1D8316
_sound_slide                    = $AF8F ; G zcc1D8316
_sound_jump                     = $AFA7 ; G zcc1D8316
_sound_coin                     = $AFD1 ; G zcc1D8316
_sound_enter_enemy              = $AFF2 ; G zcc1D8316
_sound_kill                     = $B001 ; G zcc1D8316
_sound_hit_enemy                = $B019 ; G zcc1D8316
_sound_hit_brick                = $B043 ; G zcc1D8316
_sound_hit_pow                  = $B05B ; G zcc1D8316
_zx_print_str                   = $B07C ; G zcc1D8317
zx_print_str                    = $B083 ; L zcc1D8317
zps_sloop                       = $B087 ; L zcc1D8317
zps_cloop                       = $B098 ; L zcc1D8317
_zx_print_int                   = $B0B2 ; G zcc1D8317
zx_print_int                    = $B0B9 ; L zcc1D8317
_zx_print_chr                   = $B0CE ; G zcc1D8317
zx_print_chr                    = $B0D6 ; L zcc1D8317
_zx_print_bonus_time            = $B0E7 ; G zcc1D8317
zx_print_bonus_time             = $B0EE ; L zcc1D8317
__code_user_tail                = $B10B ; G 
__rodata_clib_head              = $B10B ; G 
__rodata_clib_tail              = $B10B ; G 
__rodata_driver_head            = $B10B ; G 
__rodata_driver_tail            = $B10B ; G 
__rodata_error_string_end_head  = $B10B ; G 
__rodata_error_strings_head     = $B10B ; G 
__rodata_error_strings_tail     = $B10B ; G 
__rodata_font_head              = $B10B ; G 
__rodata_font_tail              = $B10B ; G 
__rodata_error_string_end_tail  = $B10C ; G 
__rodata_fcntl_head             = $B10C ; G 
__rodata_fcntl_tail             = $B10C ; G 
__rodata_font_4x8_head          = $B10C ; G 
__rodata_font_4x8_tail          = $B10C ; G 
__rodata_font_8x8_head          = $B10C ; G 
__rodata_font_8x8_tail          = $B10C ; G 
__rodata_font_fzx_head          = $B10C ; G 
__rodata_font_fzx_tail          = $B10C ; G 
__rodata_input_head             = $B10C ; G 
in_key_translation_table        = $B10C ; G in_key_translation_table
__rodata_compiler_head          = $B1AC ; G 
__rodata_input_tail             = $B1AC ; G 
__rodata_lib_head               = $B1AC ; G 
__rodata_lib_tail               = $B1AC ; G 
__rodata_sound_bit_head         = $B1AC ; G 
__rodata_sound_bit_tail         = $B1AC ; G 
__rodata_stdio_head             = $B1AC ; G 
__rodata_stdio_tail             = $B1AC ; G 
__rodata_stdlib_head            = $B1AC ; G 
__rodata_stdlib_tail            = $B1AC ; G 
_control_method                 = $B1AC ; G zcc1A5A2
_hall_valids                    = $B1BA ; G zcc1A5A2
___str_0                        = $B1E4 ; L zcc1A5A2
___str_1                        = $B1E8 ; L zcc1A5A2
___str_2                        = $B1EC ; L zcc1A5A2
___str_3                        = $B1F0 ; L zcc1A5A2
___str_4                        = $B1F4 ; L zcc1A5A2
___str_5                        = $B1F8 ; L zcc1A5A2
___str_6                        = $B1FC ; L zcc1A5A2
___str_0                        = $B200 ; L zcc1B142
___str_1                        = $B202 ; L zcc1B142
___str_2                        = $B208 ; L zcc1B142
___str_3                        = $B20A ; L zcc1B142
___str_4                        = $B20C ; L zcc1B142
___str_5                        = $B20E ; L zcc1B142
___str_6                        = $B210 ; L zcc1B142
___str_7                        = $B216 ; L zcc1B142
___str_8                        = $B21A ; L zcc1B142
___str_9                        = $B21D ; L zcc1B142
___str_10                       = $B220 ; L zcc1B142
___str_11                       = $B226 ; L zcc1B142
___str_12                       = $B22C ; L zcc1B142
___str_13                       = $B231 ; L zcc1B142
___str_14                       = $B238 ; L zcc1B142
___str_15                       = $B24B ; L zcc1B142
___str_16                       = $B25E ; L zcc1B142
___str_17                       = $B271 ; L zcc1B142
___str_18                       = $B27B ; L zcc1B142
___str_19                       = $B28E ; L zcc1B142
___str_20                       = $B2A1 ; L zcc1B142
___str_21                       = $B2AA ; L zcc1B142
___str_22                       = $B2B1 ; L zcc1B142
___str_23                       = $B2B7 ; L zcc1B142
___str_24                       = $B2BD ; L zcc1B142
___str_25                       = $B2C8 ; L zcc1B142
___str_26                       = $B2D3 ; L zcc1B142
___str_27                       = $B2DE ; L zcc1B142
___str_28                       = $B2E9 ; L zcc1B142
___str_29                       = $B2F4 ; L zcc1B142
___str_30                       = $B2FF ; L zcc1B142
___str_31                       = $B303 ; L zcc1B142
___str_32                       = $B307 ; L zcc1B142
___str_33                       = $B30B ; L zcc1B142
___str_34                       = $B30F ; L zcc1B142
___str_35                       = $B313 ; L zcc1B142
___str_36                       = $B321 ; L zcc1B142
___str_37                       = $B32F ; L zcc1B142
___str_38                       = $B33D ; L zcc1B142
___str_39                       = $B350 ; L zcc1B142
___str_40                       = $B362 ; L zcc1B142
___str_41                       = $B36C ; L zcc1B142
___str_42                       = $B375 ; L zcc1B142
___str_43                       = $B389 ; L zcc1B142
___str_44                       = $B39D ; L zcc1B142
___str_45                       = $B3B3 ; L zcc1B142
___str_46                       = $B3CA ; L zcc1B142
___str_47                       = $B3E1 ; L zcc1B142
___str_48                       = $B3EE ; L zcc1B142
___str_49                       = $B401 ; L zcc1B142
___str_50                       = $B415 ; L zcc1B142
___str_51                       = $B41A ; L zcc1B142
___str_52                       = $B421 ; L zcc1B142
___str_53                       = $B423 ; L zcc1B142
___str_54                       = $B425 ; L zcc1B142
___str_0                        = $B432 ; L zcc1D472
___str_1                        = $B435 ; L zcc1D472
___str_2                        = $B438 ; L zcc1D472
__rodata_compiler_tail          = $B43B ; G 
__rodata_user_head              = $B43B ; G 
_btiles                         = $B43B ; G zcc1D839
BANK06_ay_reset                 = $C000 ; G zcc1D8311
__BANK_06_head                  = $C000 ; G 
IOCTL_ITERM_CAPS                = $C009 ; G zcc1D8318
IOCTL_ITERM_COOK                = $C011 ; G zcc1D8318
IOCTL_OTERM_CRLF                = $C012 ; G zcc1D8318
IOCTL_OCHAR_CRLF                = $C014 ; G zcc1D8318
BANK06_ay_midi_play_isr         = $C01D ; G zcc1D8311
IOCTL_ITERM_LINE                = $C021 ; G zcc1D8318
IOCTL_OTERM_COOK                = $C022 ; G zcc1D8318
midi_loop                       = $C024 ; L zcc1D8311
midi_position_hold              = $C03F ; L zcc1D8311
IOCTL_ITERM_PASS                = $C041 ; G zcc1D8318
midi_position_next              = $C041 ; L zcc1D8311
IOCTL_OTERM_PAUSE               = $C042 ; G zcc1D8318
BANK06_ay_reg                   = $C045 ; L zcc1D8311
BANK06_ay_fx_play_isr           = $C053 ; G zcc1D8311
fx_repeat_loop                  = $C056 ; L zcc1D8311
fx_playing                      = $C065 ; L zcc1D8311
fx_loop                         = $C06B ; L zcc1D8311
logvol_loop                     = $C07B ; L zcc1D8311
IOCTL_ITERM_ECHO                = $C081 ; G zcc1D8318
IOCTL_OTERM_PAGE                = $C082 ; G zcc1D8318
fx_repeat                       = $C08C ; L zcc1D8311
BANK06_ay_rout                  = $C093 ; L zcc1D8311
rout_loop                       = $C099 ; L zcc1D8311
_ay_effect_01                   = $C0A9 ; G zcc1D8312
_ay_effect_02                   = $C0E7 ; G zcc1D8312
IOCTL_ITERM_CRLF                = $C101 ; G zcc1D8318
IOCTL_OTERM_BELL                = $C102 ; G zcc1D8318
IOCTL_ICHAR_CRLF                = $C103 ; G zcc1D8318
_ay_effect_03                   = $C15B ; G zcc1D8312
_ay_effect_04                   = $C1D5 ; G zcc1D8312
IOCTL_ITERM_CURS                = $C201 ; G zcc1D8318
IOCTL_OTERM_SIGNAL              = $C202 ; G zcc1D8318
_ay_effect_05                   = $C261 ; G zcc1D8312
_ay_effect_06                   = $C2F3 ; G zcc1D8312
_ay_effect_07                   = $C385 ; G zcc1D8312
_ay_effect_08                   = $C441 ; G zcc1D8312
_ay_effect_09                   = $C4FD ; G zcc1D8312
_ay_effect_10                   = $C5BF ; G zcc1D8312
_ay_effect_11                   = $C681 ; G zcc1D8312
_ay_effect_12                   = $C749 ; G zcc1D8312
_ay_effect_13                   = $C84D ; G zcc1D8312
_ay_effect_14                   = $C963 ; G zcc1D8312
_ay_effect_15                   = $CB09 ; G zcc1D8312
_ay_effect_16                   = $CD15 ; G zcc1D8312
_ay_effect_17                   = $CF69 ; G zcc1D8312
_ay_effect_18                   = $D211 ; G zcc1D8312
_ay_effect_19                   = $D53D ; G zcc1D8312
_ay_effect_background           = $D53D ; G zcc1D8312
_ay_effect_20                   = $D571 ; G zcc1D8312
_pb_midi_title                  = $D5F9 ; G zcc1D8313
_pb_midi_phase_1                = $D7F7 ; G zcc1D8313
__BANK_06_tail                  = $D923 ; G 
asm_NIRVANAP_paintC             = $DC62 ; G asm_NIRVANAP_paintC
__CODE_END_head                 = $DCBB ; G 
__CODE_END_tail                 = $DCBB ; G 
__IGNORE_head                   = $DCBB ; G 
__IGNORE_tail                   = $DCBB ; G 
__rodata_user_tail              = $DCBB ; G 
__size                          = $DCBB ; G 
__tail                          = $DCBB ; G 
IOCTL_OTERM_CLEAR               = $E002 ; G zcc1D8318
_NIRVANAP_isr                   = $F5D2 ; L zcc1B142
__NIRVANA_HOLE_head             = $F5E6 ; G 
__NIRVANA_HOLE_tail             = $F5E7 ; G 
__code_sound_bit_head           = $F5E7 ; G 
asm_bit_beep_raw                = $F5E7 ; G asm_bit_beep_raw
beeper                          = $F5EB ; L asm_bit_beep_raw
beixp3                          = $F5FF ; L asm_bit_beep_raw
behllp                          = $F604 ; L asm_bit_beep_raw
be_again                        = $F620 ; L asm_bit_beep_raw
be_end                          = $F624 ; L asm_bit_beep_raw
asm_bit_close                   = $F627 ; G asm_bit_close
asm_bit_open                    = $F632 ; G asm_bit_open
__DATA_head                     = $F638 ; G 
__DATA_tail                     = $F638 ; G 
__code_sound_bit_tail           = $F638 ; G 
__data_alloc_balloc_head        = $F638 ; G 
__data_alloc_balloc_tail        = $F638 ; G 
__data_alloc_malloc_head        = $F638 ; G 
__data_alloc_malloc_tail        = $F638 ; G 
__data_clib_head                = $F638 ; G 
__data_clib_tail                = $F638 ; G 
__data_driver_head              = $F638 ; G 
__data_driver_tail              = $F638 ; G 
__data_fcntl_fdtable_body_head  = $F638 ; G 
__data_fcntl_fdtable_body_tail  = $F638 ; G 
__data_fcntl_head               = $F638 ; G 
__data_fcntl_stdio_heap_body_head = $F638 ; G 
__data_fcntl_stdio_heap_body_tail = $F638 ; G 
__data_fcntl_stdio_heap_head_head = $F638 ; G 
__data_fcntl_stdio_heap_head_tail = $F638 ; G 
__data_fcntl_stdio_heap_tail_head = $F638 ; G 
__data_fcntl_stdio_heap_tail_tail = $F638 ; G 
__data_fcntl_tail               = $F638 ; G 
__data_font_head                = $F638 ; G 
__data_font_tail                = $F638 ; G 
__data_sound_bit_head           = $F638 ; G 
__smc_clib_head                 = $F638 ; G 
__smc_clib_tail                 = $F638 ; G 
__smc_compiler_head             = $F638 ; G 
__smc_compiler_tail             = $F638 ; G 
__smc_driver_head               = $F638 ; G 
__smc_driver_tail               = $F638 ; G 
__smc_fcntl_head                = $F638 ; G 
__smc_fcntl_tail                = $F638 ; G 
__smc_font_head                 = $F638 ; G 
__smc_font_tail                 = $F638 ; G 
__smc_l_head                    = $F638 ; G 
__smc_l_tail                    = $F638 ; G 
__smc_lib_head                  = $F638 ; G 
__smc_lib_tail                  = $F638 ; G 
__smc_sound_bit_head            = $F638 ; G 
__smc_sound_bit_tail            = $F638 ; G 
__smc_user_head                 = $F638 ; G 
__smc_user_tail                 = $F638 ; G 
__sound_bit_state               = $F638 ; G __sound_bit_state
__data_sound_bit_tail           = $F639 ; G 
__data_stdio_head               = $F639 ; G 
__data_stdio_tail               = $F639 ; G 
__data_stdlib_head              = $F639 ; G 
__stdlib_seed                   = $F639 ; G __stdlib_seed
__data_stdlib_tail              = $F63D ; G 
__data_threads_head             = $F63D ; G 
__thrd_id                       = $F63D ; G zcc1D8318
__data_compiler_head            = $F63E ; G 
__data_lib_head                 = $F63E ; G 
__data_lib_tail                 = $F63E ; G 
__data_threads_tail             = $F63E ; G 
_joynames                       = $F63E ; G zcc1A5A2
_phases                         = $F64C ; G zcc1A5A2
_lvl_1                          = $F6CC ; G zcc1A5A2
_spr_idx                        = $F96C ; G zcc1A5A2
_sprite_speed                   = $F996 ; G zcc1A5A2
_hof                            = $F9A7 ; G zcc1A5A2
_initials                       = $F9E3 ; G zcc1A5A2
__BSS_UNINITIALIZED_head        = $F9EB ; G 
__BSS_UNINITIALIZED_tail        = $F9EB ; G 
__BSS_head                      = $F9EB ; G 
__BSS_tail                      = $F9EB ; G 
__DATA_END_head                 = $F9EB ; G 
__DATA_END_tail                 = $F9EB ; G 
__bss_alloc_balloc_head         = $F9EB ; G 
__bss_alloc_balloc_tail         = $F9EB ; G 
__bss_alloc_malloc_head         = $F9EB ; G 
__bss_alloc_malloc_tail         = $F9EB ; G 
__bss_arch_head                 = $F9EB ; G 
__bss_arch_tail                 = $F9EB ; G 
__bss_clib_head                 = $F9EB ; G 
__bss_clib_tail                 = $F9EB ; G 
__bss_compress_aplib_head       = $F9EB ; G 
__bss_compress_aplib_tail       = $F9EB ; G 
__bss_driver_head               = $F9EB ; G 
__bss_driver_tail               = $F9EB ; G 
__bss_error_head                = $F9EB ; G 
__bss_font_head                 = $F9EB ; G 
__bss_font_tail                 = $F9EB ; G 
__data_compiler_tail            = $F9EB ; G 
__data_user_head                = $F9EB ; G 
__data_user_tail                = $F9EB ; G 
_errno                          = $F9EB ; G _errno
__bss_error_tail                = $F9ED ; G 
__bss_fcntl_head                = $F9ED ; G 
__bss_fcntl_tail                = $F9ED ; G 
__bss_input_head                = $F9ED ; G 
__bss_input_tail                = $F9ED ; G 
__bss_sound_bit_head            = $F9ED ; G 
__bss_sound_bit_tail            = $F9ED ; G 
__bss_stdio_head                = $F9ED ; G 
__bss_stdio_tail                = $F9ED ; G 
__bss_stdlib_head               = $F9ED ; G 
__exit_stack                    = $F9ED ; G zcc1D8318
__quickexit_stack               = $F9EE ; G zcc1D8318
__bss_compiler_head             = $F9EF ; G 
__bss_lib_head                  = $F9EF ; G 
__bss_lib_tail                  = $F9EF ; G 
__bss_stdlib_tail               = $F9EF ; G 
__bss_string_head               = $F9EF ; G 
__bss_string_tail               = $F9EF ; G 
_spec128                        = $F9EF ; G zcc1A5A2
_joyfunc1                       = $F9F0 ; G zcc1A5A2
_joyfunc2                       = $F9F2 ; G zcc1A5A2
_k1                             = $F9F4 ; G zcc1A5A2
_k2                             = $F9FE ; G zcc1A5A2
_dirs                           = $FA08 ; G zcc1A5A2
_tbuffer                        = $FA09 ; G zcc1A5A2
_class                          = $FA10 ; G zcc1A5A2
_state                          = $FA18 ; G zcc1A5A2
_state_a                        = $FA20 ; G zcc1A5A2
_tile                           = $FA28 ; G zcc1A5A2
_lin                            = $FA30 ; G zcc1A5A2
_col                            = $FA38 ; G zcc1A5A2
_colint                         = $FA40 ; G zcc1A5A2
_spr_timer                      = $FA48 ; G zcc1A5A2
_spr_timer_c                    = $FA58 ; G zcc1A5A2
_last_time                      = $FA68 ; G zcc1A5A2
_jump_lin                       = $FA78 ; G zcc1A5A2
_hit_lin                        = $FA80 ; G zcc1A5A2
_hit_col                        = $FA82 ; G zcc1A5A2
_sliding                        = $FA84 ; G zcc1A5A2
_player_score                   = $FA86 ; G zcc1A5A2
_player_next_extra              = $FA8A ; G zcc1A5A2
_player_joy                     = $FA8E ; G zcc1A5A2
_index_player                   = $FA92 ; G zcc1A5A2
_sprite_other_player            = $FA93 ; G zcc1A5A2
_sprite                         = $FA94 ; G zcc1A5A2
_tile_offset                    = $FA95 ; G zcc1A5A2
_tile_offset_other_player       = $FA96 ; G zcc1A5A2
_hit_count                      = $FA97 ; G zcc1A5A2
_s_tile0                        = $FA98 ; G zcc1A5A2
_s_tile1                        = $FA99 ; G zcc1A5A2
_s_lin0                         = $FA9A ; G zcc1A5A2
_s_lin1                         = $FA9B ; G zcc1A5A2
_s_col0                         = $FA9C ; G zcc1A5A2
_s_col1                         = $FA9D ; G zcc1A5A2
_loop_count                     = $FA9E ; G zcc1A5A2
_index1                         = $FAA0 ; G zcc1A5A2
_index2                         = $FAA2 ; G zcc1A5A2
_index3                         = $FAA4 ; G zcc1A5A2
_index_d                        = $FAA6 ; G zcc1A5A2
_tmp                            = $FAA8 ; G zcc1A5A2
_tmp0                           = $FAA9 ; G zcc1A5A2
_tmp1                           = $FAAA ; G zcc1A5A2
_tmp_uc                         = $FAAB ; G zcc1A5A2
_tmp_sc                         = $FAAC ; G zcc1A5A2
_tmp_ui                         = $FAAD ; G zcc1A5A2
_enemies                        = $FAAF ; G zcc1A5A2
_zx_val_asm                     = $FAB0 ; G zcc1A5A2
_attrib                         = $FAB1 ; G zcc1A5A2
_attrib_hl                      = $FAB5 ; G zcc1A5A2
_s_state                        = $FAB9 ; G zcc1A5A2
_curr_time                      = $FABA ; G zcc1A5A2
_entry_time                     = $FABC ; G zcc1A5A2
_frame_time                     = $FABE ; G zcc1A5A2
_col_time                       = $FAC0 ; G zcc1A5A2
_frame_loop_count               = $FAC2 ; G zcc1A5A2
_spr_count                      = $FAC4 ; G zcc1A5A2
_game_pow                       = $FAC5 ; G zcc1A5A2
_game_brick_tile                = $FAC6 ; G zcc1A5A2
_game_two_player                = $FAC7 ; G zcc1A5A2
_game_sound                     = $FAC8 ; G zcc1A5A2
_game_over                      = $FAC9 ; G zcc1A5A2
_game_lives                     = $FACA ; G zcc1A5A2
_game_lives_update              = $FACC ; G zcc1A5A2
_game_time_flipped              = $FACD ; G zcc1A5A2
_game_time_fireball_start       = $FACF ; G zcc1A5A2
_spr_water_clear                = $FAD1 ; G zcc1A5A2
_spr_water_time                 = $FAD2 ; G zcc1A5A2
_game_bonus                     = $FAD4 ; G zcc1A5A2
_game_type                      = $FAD5 ; G zcc1A5A2
_game_menu_sel                  = $FAD6 ; G zcc1A5A2
_game_score_top                 = $FAD7 ; G zcc1A5A2
_phase_quota                    = $FAD9 ; G zcc1A5A2
_phase_left                     = $FADC ; G zcc1A5A2
_phase_tot                      = $FADD ; G zcc1A5A2
_phase_pop                      = $FADE ; G zcc1A5A2
_phase_coins                    = $FADF ; G zcc1A5A2
_phase_end                      = $FAE0 ; G zcc1A5A2
_phase_curr                     = $FAE1 ; G zcc1A5A2
_phase_angry                    = $FAE2 ; G zcc1A5A2
_phase_bonus_total              = $FAE3 ; G zcc1A5A2
_screen_paper                   = $FAE5 ; G zcc1A5A2
_screen_ink                     = $FAE6 ; G zcc1A5A2
_score_osd_lin                  = $FAE7 ; G zcc1A5A2
_score_osd_col                  = $FAE9 ; G zcc1A5A2
_score_osd_time                 = $FAEB ; G zcc1A5A2
_score_osd_tile                 = $FAEF ; G zcc1A5A2
_sprite_speed_alt               = $FAF3 ; G zcc1A5A2
__bss_compiler_tail             = $FAFB ; G 
__bss_user_head                 = $FAFB ; G 
_ay_reset_low                   = $FAFB ; G zcc1D8311
_ay_midi_playing                = $FAFC ; G zcc1D8311
_ay_midi_hold                   = $FAFE ; G zcc1D8311
_ay_fx_playing                  = $FAFF ; G zcc1D8311
__BSS_END_head                  = $FB01 ; G 
__BSS_END_tail                  = $FB01 ; G 
__bss_user_tail                 = $FB01 ; G 
asm_NIRVANAP_drawT_raw          = $FB06 ; G asm_NIRVANAP_drawT_raw
asm_NIRVANAP_fillT_raw          = $FDA0 ; G asm_NIRVANAP_fillT_raw
_NIRVANAP_start                 = $FDE3 ; G NIRVANAP_start
asm_NIRVANAP_start              = $FDE3 ; G asm_NIRVANAP_start
_NIRVANAP_stop                  = $FDF4 ; G NIRVANAP_stop
asm_NIRVANAP_stop               = $FDF4 ; G asm_NIRVANAP_stop
asm_NIRVANAP_fillC              = $FF21 ; G asm_NIRVANAP_fillC
TAR__register_sp                = $FF58 ; L zcc1D8318
TAR__crt_on_exit                = $30002 ; L zcc1D8318
__clock_freq                    = $3567E0 ; L asm_z80_delay_ms
